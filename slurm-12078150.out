DGL backend not selected or invalid.  Assuming PyTorch for now.
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/heterograph_index.py:8: UserWarning: A NumPy version >=1.23.5 and <2.3.0 is required for this version of SciPy (detected version 2.3.1)
  import scipy
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Setting the default backend to "pytorch". You can change it in the ~/.dgl/config.json file or export the DGLBACKEND environment variable.  Valid options are: pytorch, mxnet, tensorflow (all lowercase)
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=100, data_path='../tsp_input/generated_insatnces_30_size_100', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP100 for 100 and tested in ATSP100 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:06<?, ?it/s, Sum_GNN_time:=5.8721, Sum_Search_time:=0.1679, Avg_Gap_init:=7.4939, Avg_Gap_best:=6.0387, Avg_Cost_init:=1.7212, Avg_Cost_best:=1.6979, Avg_Otpimal_best:=1.6012, Avg_counts: =32.0000]  3%|▎         | 1/30 [00:06<03:10,  6.58s/it, Sum_GNN_time:=5.8721, Sum_Search_time:=0.1679, Avg_Gap_init:=7.4939, Avg_Gap_best:=6.0387, Avg_Cost_init:=1.7212, Avg_Cost_best:=1.6979, Avg_Otpimal_best:=1.6012, Avg_counts: =32.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  3%|▎         | 1/30 [00:07<03:10,  6.58s/it, Sum_GNN_time:=5.9291, Sum_Search_time:=0.3357, Avg_Gap_init:=15.3587, Avg_Gap_best:=9.4022, Avg_Cost_init:=1.8898, Avg_Cost_best:=1.7908, Avg_Otpimal_best:=1.6358, Avg_counts: =32.0000]  7%|▋         | 2/30 [00:07<01:24,  3.02s/it, Sum_GNN_time:=5.9291, Sum_Search_time:=0.3357, Avg_Gap_init:=15.3587, Avg_Gap_best:=9.4022, Avg_Cost_init:=1.8898, Avg_Cost_best:=1.7908, Avg_Otpimal_best:=1.6358, Avg_counts: =32.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  7%|▋         | 2/30 [00:07<01:24,  3.02s/it, Sum_GNN_time:=5.9852, Sum_Search_time:=0.5041, Avg_Gap_init:=16.7881, Avg_Gap_best:=10.1974, Avg_Cost_init:=1.8315, Avg_Cost_best:=1.7280, Avg_Otpimal_best:=1.5684, Avg_counts: =32.0000] 10%|█         | 3/30 [00:07<00:50,  1.86s/it, Sum_GNN_time:=5.9852, Sum_Search_time:=0.5041, Avg_Gap_init:=16.7881, Avg_Gap_best:=10.1974, Avg_Cost_init:=1.8315, Avg_Cost_best:=1.7280, Avg_Otpimal_best:=1.5684, Avg_counts: =32.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 10%|█         | 3/30 [00:08<00:50,  1.86s/it, Sum_GNN_time:=6.0417, Sum_Search_time:=0.6671, Avg_Gap_init:=15.5815, Avg_Gap_best:=9.9780, Avg_Cost_init:=1.7876, Avg_Cost_best:=1.7002, Avg_Otpimal_best:=1.5460, Avg_counts: =31.5000]  13%|█▎        | 4/30 [00:08<00:34,  1.32s/it, Sum_GNN_time:=6.0417, Sum_Search_time:=0.6671, Avg_Gap_init:=15.5815, Avg_Gap_best:=9.9780, Avg_Cost_init:=1.7876, Avg_Cost_best:=1.7002, Avg_Otpimal_best:=1.5460, Avg_counts: =31.5000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 13%|█▎        | 4/30 [00:08<00:34,  1.32s/it, Sum_GNN_time:=6.0987, Sum_Search_time:=0.8384, Avg_Gap_init:=14.6559, Avg_Gap_best:=9.9072, Avg_Cost_init:=1.7545, Avg_Cost_best:=1.6807, Avg_Otpimal_best:=1.5292, Avg_counts: =31.6000] 17%|█▋        | 5/30 [00:08<00:26,  1.05s/it, Sum_GNN_time:=6.0987, Sum_Search_time:=0.8384, Avg_Gap_init:=14.6559, Avg_Gap_best:=9.9072, Avg_Cost_init:=1.7545, Avg_Cost_best:=1.6807, Avg_Otpimal_best:=1.5292, Avg_counts: =31.6000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 17%|█▋        | 5/30 [00:09<00:26,  1.05s/it, Sum_GNN_time:=6.1562, Sum_Search_time:=1.0061, Avg_Gap_init:=13.5015, Avg_Gap_best:=9.0437, Avg_Cost_init:=1.7553, Avg_Cost_best:=1.6856, Avg_Otpimal_best:=1.5465, Avg_counts: =30.6667] 20%|██        | 6/30 [00:09<00:20,  1.16it/s, Sum_GNN_time:=6.1562, Sum_Search_time:=1.0061, Avg_Gap_init:=13.5015, Avg_Gap_best:=9.0437, Avg_Cost_init:=1.7553, Avg_Cost_best:=1.6856, Avg_Otpimal_best:=1.5465, Avg_counts: =30.6667]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 20%|██        | 6/30 [00:09<00:20,  1.16it/s, Sum_GNN_time:=6.2134, Sum_Search_time:=1.1716, Avg_Gap_init:=14.5991, Avg_Gap_best:=9.6471, Avg_Cost_init:=1.8038, Avg_Cost_best:=1.7245, Avg_Otpimal_best:=1.5725, Avg_counts: =30.8571] 23%|██▎       | 7/30 [00:09<00:16,  1.36it/s, Sum_GNN_time:=6.2134, Sum_Search_time:=1.1716, Avg_Gap_init:=14.5991, Avg_Gap_best:=9.6471, Avg_Cost_init:=1.8038, Avg_Cost_best:=1.7245, Avg_Otpimal_best:=1.5725, Avg_counts: =30.8571]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 23%|██▎       | 7/30 [00:10<00:16,  1.36it/s, Sum_GNN_time:=6.2704, Sum_Search_time:=1.3377, Avg_Gap_init:=16.2956, Avg_Gap_best:=9.8990, Avg_Cost_init:=1.8790, Avg_Cost_best:=1.7709, Avg_Otpimal_best:=1.6105, Avg_counts: =31.0000] 27%|██▋       | 8/30 [00:10<00:14,  1.52it/s, Sum_GNN_time:=6.2704, Sum_Search_time:=1.3377, Avg_Gap_init:=16.2956, Avg_Gap_best:=9.8990, Avg_Cost_init:=1.8790, Avg_Cost_best:=1.7709, Avg_Otpimal_best:=1.6105, Avg_counts: =31.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 27%|██▋       | 8/30 [00:10<00:14,  1.52it/s, Sum_GNN_time:=6.3316, Sum_Search_time:=1.4977, Avg_Gap_init:=16.0686, Avg_Gap_best:=10.0577, Avg_Cost_init:=1.8675, Avg_Cost_best:=1.7664, Avg_Otpimal_best:=1.6043, Avg_counts: =30.6667] 30%|███       | 9/30 [00:10<00:13,  1.57it/s, Sum_GNN_time:=6.3316, Sum_Search_time:=1.4977, Avg_Gap_init:=16.0686, Avg_Gap_best:=10.0577, Avg_Cost_init:=1.8675, Avg_Cost_best:=1.7664, Avg_Otpimal_best:=1.6043, Avg_counts: =30.6667]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 30%|███       | 9/30 [00:11<00:13,  1.57it/s, Sum_GNN_time:=6.3922, Sum_Search_time:=1.6694, Avg_Gap_init:=15.9176, Avg_Gap_best:=9.9562, Avg_Cost_init:=1.8760, Avg_Cost_best:=1.7755, Avg_Otpimal_best:=1.6142, Avg_counts: =30.4000]  33%|███▎      | 10/30 [00:11<00:12,  1.65it/s, Sum_GNN_time:=6.3922, Sum_Search_time:=1.6694, Avg_Gap_init:=15.9176, Avg_Gap_best:=9.9562, Avg_Cost_init:=1.8760, Avg_Cost_best:=1.7755, Avg_Otpimal_best:=1.6142, Avg_counts: =30.4000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 33%|███▎      | 10/30 [00:11<00:12,  1.65it/s, Sum_GNN_time:=6.4491, Sum_Search_time:=1.8346, Avg_Gap_init:=16.0703, Avg_Gap_best:=10.1672, Avg_Cost_init:=1.8937, Avg_Cost_best:=1.7939, Avg_Otpimal_best:=1.6276, Avg_counts: =30.3636] 37%|███▋      | 11/30 [00:11<00:10,  1.77it/s, Sum_GNN_time:=6.4491, Sum_Search_time:=1.8346, Avg_Gap_init:=16.0703, Avg_Gap_best:=10.1672, Avg_Cost_init:=1.8937, Avg_Cost_best:=1.7939, Avg_Otpimal_best:=1.6276, Avg_counts: =30.3636]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 37%|███▋      | 11/30 [00:12<00:10,  1.77it/s, Sum_GNN_time:=6.5062, Sum_Search_time:=2.0009, Avg_Gap_init:=15.3898, Avg_Gap_best:=9.9055, Avg_Cost_init:=1.8598, Avg_Cost_best:=1.7672, Avg_Otpimal_best:=1.6067, Avg_counts: =30.3333]  40%|████      | 12/30 [00:12<00:10,  1.67it/s, Sum_GNN_time:=6.5062, Sum_Search_time:=2.0009, Avg_Gap_init:=15.3898, Avg_Gap_best:=9.9055, Avg_Cost_init:=1.8598, Avg_Cost_best:=1.7672, Avg_Otpimal_best:=1.6067, Avg_counts: =30.3333]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 40%|████      | 12/30 [00:12<00:10,  1.67it/s, Sum_GNN_time:=6.5622, Sum_Search_time:=2.1686, Avg_Gap_init:=14.9845, Avg_Gap_best:=9.7083, Avg_Cost_init:=1.8421, Avg_Cost_best:=1.7535, Avg_Otpimal_best:=1.5970, Avg_counts: =30.3077] 43%|████▎     | 13/30 [00:12<00:09,  1.77it/s, Sum_GNN_time:=6.5622, Sum_Search_time:=2.1686, Avg_Gap_init:=14.9845, Avg_Gap_best:=9.7083, Avg_Cost_init:=1.8421, Avg_Cost_best:=1.7535, Avg_Otpimal_best:=1.5970, Avg_counts: =30.3077]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 43%|████▎     | 13/30 [00:13<00:09,  1.77it/s, Sum_GNN_time:=6.6193, Sum_Search_time:=2.3359, Avg_Gap_init:=15.6092, Avg_Gap_best:=9.7210, Avg_Cost_init:=1.8528, Avg_Cost_best:=1.7547, Avg_Otpimal_best:=1.5980, Avg_counts: =30.4286] 47%|████▋     | 14/30 [00:13<00:09,  1.77it/s, Sum_GNN_time:=6.6193, Sum_Search_time:=2.3359, Avg_Gap_init:=15.6092, Avg_Gap_best:=9.7210, Avg_Cost_init:=1.8528, Avg_Cost_best:=1.7547, Avg_Otpimal_best:=1.5980, Avg_counts: =30.4286]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 47%|████▋     | 14/30 [00:13<00:09,  1.77it/s, Sum_GNN_time:=6.6775, Sum_Search_time:=2.5050, Avg_Gap_init:=15.2495, Avg_Gap_best:=9.4855, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.7472, Avg_Otpimal_best:=1.5945, Avg_counts: =30.8000] 50%|█████     | 15/30 [00:13<00:08,  1.85it/s, Sum_GNN_time:=6.6775, Sum_Search_time:=2.5050, Avg_Gap_init:=15.2495, Avg_Gap_best:=9.4855, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.7472, Avg_Otpimal_best:=1.5945, Avg_counts: =30.8000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 50%|█████     | 15/30 [00:14<00:08,  1.85it/s, Sum_GNN_time:=6.7343, Sum_Search_time:=2.6732, Avg_Gap_init:=15.6367, Avg_Gap_best:=9.5400, Avg_Cost_init:=1.8533, Avg_Cost_best:=1.7520, Avg_Otpimal_best:=1.5982, Avg_counts: =30.8750] 53%|█████▎    | 16/30 [00:14<00:07,  1.92it/s, Sum_GNN_time:=6.7343, Sum_Search_time:=2.6732, Avg_Gap_init:=15.6367, Avg_Gap_best:=9.5400, Avg_Cost_init:=1.8533, Avg_Cost_best:=1.7520, Avg_Otpimal_best:=1.5982, Avg_counts: =30.8750]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 53%|█████▎    | 16/30 [00:14<00:07,  1.92it/s, Sum_GNN_time:=6.7906, Sum_Search_time:=2.8428, Avg_Gap_init:=15.3189, Avg_Gap_best:=9.3195, Avg_Cost_init:=1.8506, Avg_Cost_best:=1.7510, Avg_Otpimal_best:=1.6007, Avg_counts: =30.4706] 57%|█████▋    | 17/30 [00:14<00:06,  1.96it/s, Sum_GNN_time:=6.7906, Sum_Search_time:=2.8428, Avg_Gap_init:=15.3189, Avg_Gap_best:=9.3195, Avg_Cost_init:=1.8506, Avg_Cost_best:=1.7510, Avg_Otpimal_best:=1.6007, Avg_counts: =30.4706]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 57%|█████▋    | 17/30 [00:15<00:06,  1.96it/s, Sum_GNN_time:=6.8474, Sum_Search_time:=3.0114, Avg_Gap_init:=15.1377, Avg_Gap_best:=9.1424, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7448, Avg_Otpimal_best:=1.5975, Avg_counts: =30.4444] 60%|██████    | 18/30 [00:15<00:06,  1.97it/s, Sum_GNN_time:=6.8474, Sum_Search_time:=3.0114, Avg_Gap_init:=15.1377, Avg_Gap_best:=9.1424, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7448, Avg_Otpimal_best:=1.5975, Avg_counts: =30.4444]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 60%|██████    | 18/30 [00:15<00:06,  1.97it/s, Sum_GNN_time:=6.9088, Sum_Search_time:=3.1745, Avg_Gap_init:=15.0690, Avg_Gap_best:=9.2098, Avg_Cost_init:=1.8328, Avg_Cost_best:=1.7364, Avg_Otpimal_best:=1.5890, Avg_counts: =30.3158] 63%|██████▎   | 19/30 [00:15<00:05,  1.86it/s, Sum_GNN_time:=6.9088, Sum_Search_time:=3.1745, Avg_Gap_init:=15.0690, Avg_Gap_best:=9.2098, Avg_Cost_init:=1.8328, Avg_Cost_best:=1.7364, Avg_Otpimal_best:=1.5890, Avg_counts: =30.3158]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 63%|██████▎   | 19/30 [00:16<00:05,  1.86it/s, Sum_GNN_time:=6.9686, Sum_Search_time:=3.3403, Avg_Gap_init:=14.8763, Avg_Gap_best:=9.0052, Avg_Cost_init:=1.8267, Avg_Cost_best:=1.7303, Avg_Otpimal_best:=1.5864, Avg_counts: =30.3000] 67%|██████▋   | 20/30 [00:16<00:05,  1.89it/s, Sum_GNN_time:=6.9686, Sum_Search_time:=3.3403, Avg_Gap_init:=14.8763, Avg_Gap_best:=9.0052, Avg_Cost_init:=1.8267, Avg_Cost_best:=1.7303, Avg_Otpimal_best:=1.5864, Avg_counts: =30.3000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 67%|██████▋   | 20/30 [00:16<00:05,  1.89it/s, Sum_GNN_time:=7.0258, Sum_Search_time:=3.5081, Avg_Gap_init:=14.6727, Avg_Gap_best:=8.8892, Avg_Cost_init:=1.8085, Avg_Cost_best:=1.7143, Avg_Otpimal_best:=1.5731, Avg_counts: =30.2857] 70%|███████   | 21/30 [00:16<00:04,  1.96it/s, Sum_GNN_time:=7.0258, Sum_Search_time:=3.5081, Avg_Gap_init:=14.6727, Avg_Gap_best:=8.8892, Avg_Cost_init:=1.8085, Avg_Cost_best:=1.7143, Avg_Otpimal_best:=1.5731, Avg_counts: =30.2857]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 70%|███████   | 21/30 [00:17<00:04,  1.96it/s, Sum_GNN_time:=7.0826, Sum_Search_time:=3.6743, Avg_Gap_init:=14.4004, Avg_Gap_best:=8.7753, Avg_Cost_init:=1.8116, Avg_Cost_best:=1.7198, Avg_Otpimal_best:=1.5801, Avg_counts: =30.2727] 73%|███████▎  | 22/30 [00:17<00:04,  1.98it/s, Sum_GNN_time:=7.0826, Sum_Search_time:=3.6743, Avg_Gap_init:=14.4004, Avg_Gap_best:=8.7753, Avg_Cost_init:=1.8116, Avg_Cost_best:=1.7198, Avg_Otpimal_best:=1.5801, Avg_counts: =30.2727]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 73%|███████▎  | 22/30 [00:17<00:04,  1.98it/s, Sum_GNN_time:=7.1388, Sum_Search_time:=3.8440, Avg_Gap_init:=14.0524, Avg_Gap_best:=8.6068, Avg_Cost_init:=1.8046, Avg_Cost_best:=1.7158, Avg_Otpimal_best:=1.5788, Avg_counts: =30.3478] 77%|███████▋  | 23/30 [00:17<00:03,  2.02it/s, Sum_GNN_time:=7.1388, Sum_Search_time:=3.8440, Avg_Gap_init:=14.0524, Avg_Gap_best:=8.6068, Avg_Cost_init:=1.8046, Avg_Cost_best:=1.7158, Avg_Otpimal_best:=1.5788, Avg_counts: =30.3478]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 77%|███████▋  | 23/30 [00:18<00:03,  2.02it/s, Sum_GNN_time:=7.1956, Sum_Search_time:=4.0121, Avg_Gap_init:=14.2330, Avg_Gap_best:=8.9387, Avg_Cost_init:=1.8045, Avg_Cost_best:=1.7183, Avg_Otpimal_best:=1.5765, Avg_counts: =30.3333] 80%|████████  | 24/30 [00:18<00:03,  1.93it/s, Sum_GNN_time:=7.1956, Sum_Search_time:=4.0121, Avg_Gap_init:=14.2330, Avg_Gap_best:=8.9387, Avg_Cost_init:=1.8045, Avg_Cost_best:=1.7183, Avg_Otpimal_best:=1.5765, Avg_counts: =30.3333]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 80%|████████  | 24/30 [00:19<00:03,  1.93it/s, Sum_GNN_time:=7.2527, Sum_Search_time:=4.1817, Avg_Gap_init:=14.3476, Avg_Gap_best:=8.8339, Avg_Cost_init:=1.7993, Avg_Cost_best:=1.7104, Avg_Otpimal_best:=1.5706, Avg_counts: =30.4000] 83%|████████▎ | 25/30 [00:19<00:02,  1.95it/s, Sum_GNN_time:=7.2527, Sum_Search_time:=4.1817, Avg_Gap_init:=14.3476, Avg_Gap_best:=8.8339, Avg_Cost_init:=1.7993, Avg_Cost_best:=1.7104, Avg_Otpimal_best:=1.5706, Avg_counts: =30.4000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 83%|████████▎ | 25/30 [00:19<00:02,  1.95it/s, Sum_GNN_time:=7.3096, Sum_Search_time:=4.3530, Avg_Gap_init:=14.2491, Avg_Gap_best:=8.7980, Avg_Cost_init:=1.7932, Avg_Cost_best:=1.7055, Avg_Otpimal_best:=1.5667, Avg_counts: =30.4615] 87%|████████▋ | 26/30 [00:19<00:02,  2.00it/s, Sum_GNN_time:=7.3096, Sum_Search_time:=4.3530, Avg_Gap_init:=14.2491, Avg_Gap_best:=8.7980, Avg_Cost_init:=1.7932, Avg_Cost_best:=1.7055, Avg_Otpimal_best:=1.5667, Avg_counts: =30.4615]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 87%|████████▋ | 26/30 [00:19<00:02,  2.00it/s, Sum_GNN_time:=7.3665, Sum_Search_time:=4.5243, Avg_Gap_init:=14.0303, Avg_Gap_best:=8.7202, Avg_Cost_init:=1.7847, Avg_Cost_best:=1.6993, Avg_Otpimal_best:=1.5621, Avg_counts: =30.4444] 90%|█████████ | 27/30 [00:19<00:01,  1.99it/s, Sum_GNN_time:=7.3665, Sum_Search_time:=4.5243, Avg_Gap_init:=14.0303, Avg_Gap_best:=8.7202, Avg_Cost_init:=1.7847, Avg_Cost_best:=1.6993, Avg_Otpimal_best:=1.5621, Avg_counts: =30.4444]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 90%|█████████ | 27/30 [00:20<00:01,  1.99it/s, Sum_GNN_time:=7.4271, Sum_Search_time:=4.6874, Avg_Gap_init:=13.8606, Avg_Gap_best:=8.6120, Avg_Cost_init:=1.7803, Avg_Cost_best:=1.6960, Avg_Otpimal_best:=1.5606, Avg_counts: =30.5714] 93%|█████████▎| 28/30 [00:20<00:01,  1.64it/s, Sum_GNN_time:=7.4271, Sum_Search_time:=4.6874, Avg_Gap_init:=13.8606, Avg_Gap_best:=8.6120, Avg_Cost_init:=1.7803, Avg_Cost_best:=1.6960, Avg_Otpimal_best:=1.5606, Avg_counts: =30.5714]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 93%|█████████▎| 28/30 [00:21<00:01,  1.64it/s, Sum_GNN_time:=7.4882, Sum_Search_time:=4.8532, Avg_Gap_init:=14.2381, Avg_Gap_best:=8.8457, Avg_Cost_init:=1.7897, Avg_Cost_best:=1.7030, Avg_Otpimal_best:=1.5635, Avg_counts: =30.4138] 97%|█████████▋| 29/30 [00:21<00:00,  1.66it/s, Sum_GNN_time:=7.4882, Sum_Search_time:=4.8532, Avg_Gap_init:=14.2381, Avg_Gap_best:=8.8457, Avg_Cost_init:=1.7897, Avg_Cost_best:=1.7030, Avg_Otpimal_best:=1.5635, Avg_counts: =30.4138]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 97%|█████████▋| 29/30 [00:21<00:00,  1.66it/s, Sum_GNN_time:=7.5449, Sum_Search_time:=5.0213, Avg_Gap_init:=14.0591, Avg_Gap_best:=8.7864, Avg_Cost_init:=1.7844, Avg_Cost_best:=1.6997, Avg_Otpimal_best:=1.5613, Avg_counts: =30.4000]100%|██████████| 30/30 [00:21<00:00,  1.78it/s, Sum_GNN_time:=7.5449, Sum_Search_time:=5.0213, Avg_Gap_init:=14.0591, Avg_Gap_best:=8.7864, Avg_Cost_init:=1.7844, Avg_Cost_best:=1.6997, Avg_Otpimal_best:=1.5613, Avg_counts: =30.4000]100%|██████████| 30/30 [00:21<00:00,  1.37it/s, Sum_GNN_time:=7.5449, Sum_Search_time:=5.0213, Avg_Gap_init:=14.0591, Avg_Gap_best:=8.7864, Avg_Cost_init:=1.7844, Avg_Cost_best:=1.6997, Avg_Otpimal_best:=1.5613, Avg_counts: =30.4000]
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Total time for model prediction: 7.5449 seconds
Total time for guided local search: 5.0213 seconds
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=150, data_path='../tsp_input/generated_insatnces_30_size_150', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP150 for 100 and tested in ATSP150 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:00<?, ?it/s, Sum_GNN_time:=0.1355, Sum_Search_time:=0.1864, Avg_Gap_init:=18.2868, Avg_Gap_best:=14.6975, Avg_Cost_init:=1.8855, Avg_Cost_best:=1.8283, Avg_Otpimal_best:=1.5940, Avg_counts: =18.0000]  3%|▎         | 1/30 [00:00<00:27,  1.05it/s, Sum_GNN_time:=0.1355, Sum_Search_time:=0.1864, Avg_Gap_init:=18.2868, Avg_Gap_best:=14.6975, Avg_Cost_init:=1.8855, Avg_Cost_best:=1.8283, Avg_Otpimal_best:=1.5940, Avg_counts: =18.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  3%|▎         | 1/30 [00:01<00:27,  1.05it/s, Sum_GNN_time:=0.2707, Sum_Search_time:=0.3716, Avg_Gap_init:=14.1236, Avg_Gap_best:=11.0793, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7401, Avg_Otpimal_best:=1.5656, Avg_counts: =18.0000]  7%|▋         | 2/30 [00:01<00:27,  1.03it/s, Sum_GNN_time:=0.2707, Sum_Search_time:=0.3716, Avg_Gap_init:=14.1236, Avg_Gap_best:=11.0793, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7401, Avg_Otpimal_best:=1.5656, Avg_counts: =18.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  7%|▋         | 2/30 [00:02<00:27,  1.03it/s, Sum_GNN_time:=0.4051, Sum_Search_time:=0.5368, Avg_Gap_init:=14.4492, Avg_Gap_best:=10.8417, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7315, Avg_Otpimal_best:=1.5615, Avg_counts: =18.6667] 10%|█         | 3/30 [00:02<00:24,  1.09it/s, Sum_GNN_time:=0.4051, Sum_Search_time:=0.5368, Avg_Gap_init:=14.4492, Avg_Gap_best:=10.8417, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7315, Avg_Otpimal_best:=1.5615, Avg_counts: =18.6667]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 10%|█         | 3/30 [00:03<00:24,  1.09it/s, Sum_GNN_time:=0.5473, Sum_Search_time:=0.7098, Avg_Gap_init:=15.4458, Avg_Gap_best:=11.2560, Avg_Cost_init:=1.7740, Avg_Cost_best:=1.7100, Avg_Otpimal_best:=1.5368, Avg_counts: =19.0000] 13%|█▎        | 4/30 [00:03<00:25,  1.03it/s, Sum_GNN_time:=0.5473, Sum_Search_time:=0.7098, Avg_Gap_init:=15.4458, Avg_Gap_best:=11.2560, Avg_Cost_init:=1.7740, Avg_Cost_best:=1.7100, Avg_Otpimal_best:=1.5368, Avg_counts: =19.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 13%|█▎        | 4/30 [00:05<00:25,  1.03it/s, Sum_GNN_time:=0.6834, Sum_Search_time:=0.8927, Avg_Gap_init:=16.6462, Avg_Gap_best:=11.6996, Avg_Cost_init:=1.8075, Avg_Cost_best:=1.7308, Avg_Otpimal_best:=1.5491, Avg_counts: =20.0000] 17%|█▋        | 5/30 [00:05<00:26,  1.06s/it, Sum_GNN_time:=0.6834, Sum_Search_time:=0.8927, Avg_Gap_init:=16.6462, Avg_Gap_best:=11.6996, Avg_Cost_init:=1.8075, Avg_Cost_best:=1.7308, Avg_Otpimal_best:=1.5491, Avg_counts: =20.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 17%|█▋        | 5/30 [00:05<00:26,  1.06s/it, Sum_GNN_time:=0.8169, Sum_Search_time:=1.0736, Avg_Gap_init:=16.6094, Avg_Gap_best:=11.6538, Avg_Cost_init:=1.8446, Avg_Cost_best:=1.7662, Avg_Otpimal_best:=1.5816, Avg_counts: =20.6667] 20%|██        | 6/30 [00:05<00:23,  1.00it/s, Sum_GNN_time:=0.8169, Sum_Search_time:=1.0736, Avg_Gap_init:=16.6094, Avg_Gap_best:=11.6538, Avg_Cost_init:=1.8446, Avg_Cost_best:=1.7662, Avg_Otpimal_best:=1.5816, Avg_counts: =20.6667]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 20%|██        | 6/30 [00:06<00:23,  1.00it/s, Sum_GNN_time:=0.9516, Sum_Search_time:=1.2558, Avg_Gap_init:=15.7976, Avg_Gap_best:=11.0234, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7679, Avg_Otpimal_best:=1.5926, Avg_counts: =21.1429] 23%|██▎       | 7/30 [00:06<00:22,  1.01it/s, Sum_GNN_time:=0.9516, Sum_Search_time:=1.2558, Avg_Gap_init:=15.7976, Avg_Gap_best:=11.0234, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7679, Avg_Otpimal_best:=1.5926, Avg_counts: =21.1429]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 23%|██▎       | 7/30 [00:07<00:22,  1.01it/s, Sum_GNN_time:=1.0858, Sum_Search_time:=1.4367, Avg_Gap_init:=16.6077, Avg_Gap_best:=11.7812, Avg_Cost_init:=1.8652, Avg_Cost_best:=1.7881, Avg_Otpimal_best:=1.5994, Avg_counts: =21.5000] 27%|██▋       | 8/30 [00:07<00:21,  1.05it/s, Sum_GNN_time:=1.0858, Sum_Search_time:=1.4367, Avg_Gap_init:=16.6077, Avg_Gap_best:=11.7812, Avg_Cost_init:=1.8652, Avg_Cost_best:=1.7881, Avg_Otpimal_best:=1.5994, Avg_counts: =21.5000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 27%|██▋       | 8/30 [00:08<00:21,  1.05it/s, Sum_GNN_time:=1.2283, Sum_Search_time:=1.6112, Avg_Gap_init:=16.1744, Avg_Gap_best:=11.7083, Avg_Cost_init:=1.8443, Avg_Cost_best:=1.7731, Avg_Otpimal_best:=1.5871, Avg_counts: =21.3333] 30%|███       | 9/30 [00:08<00:20,  1.02it/s, Sum_GNN_time:=1.2283, Sum_Search_time:=1.6112, Avg_Gap_init:=16.1744, Avg_Gap_best:=11.7083, Avg_Cost_init:=1.8443, Avg_Cost_best:=1.7731, Avg_Otpimal_best:=1.5871, Avg_counts: =21.3333]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 30%|███       | 9/30 [00:09<00:20,  1.02it/s, Sum_GNN_time:=1.3641, Sum_Search_time:=1.7933, Avg_Gap_init:=16.2496, Avg_Gap_best:=11.7902, Avg_Cost_init:=1.8458, Avg_Cost_best:=1.7747, Avg_Otpimal_best:=1.5873, Avg_counts: =21.6000] 33%|███▎      | 10/30 [00:09<00:19,  1.03it/s, Sum_GNN_time:=1.3641, Sum_Search_time:=1.7933, Avg_Gap_init:=16.2496, Avg_Gap_best:=11.7902, Avg_Cost_init:=1.8458, Avg_Cost_best:=1.7747, Avg_Otpimal_best:=1.5873, Avg_counts: =21.6000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 33%|███▎      | 10/30 [00:10<00:19,  1.03it/s, Sum_GNN_time:=1.4980, Sum_Search_time:=1.9639, Avg_Gap_init:=16.4450, Avg_Gap_best:=11.7734, Avg_Cost_init:=1.8411, Avg_Cost_best:=1.7671, Avg_Otpimal_best:=1.5808, Avg_counts: =20.5455] 37%|███▋      | 11/30 [00:10<00:19,  1.00s/it, Sum_GNN_time:=1.4980, Sum_Search_time:=1.9639, Avg_Gap_init:=16.4450, Avg_Gap_best:=11.7734, Avg_Cost_init:=1.8411, Avg_Cost_best:=1.7671, Avg_Otpimal_best:=1.5808, Avg_counts: =20.5455]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 37%|███▋      | 11/30 [00:11<00:19,  1.00s/it, Sum_GNN_time:=1.6337, Sum_Search_time:=2.1463, Avg_Gap_init:=16.6097, Avg_Gap_best:=12.0573, Avg_Cost_init:=1.8414, Avg_Cost_best:=1.7694, Avg_Otpimal_best:=1.5789, Avg_counts: =20.8333] 40%|████      | 12/30 [00:11<00:17,  1.04it/s, Sum_GNN_time:=1.6337, Sum_Search_time:=2.1463, Avg_Gap_init:=16.6097, Avg_Gap_best:=12.0573, Avg_Cost_init:=1.8414, Avg_Cost_best:=1.7694, Avg_Otpimal_best:=1.5789, Avg_counts: =20.8333]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 40%|████      | 12/30 [00:12<00:17,  1.04it/s, Sum_GNN_time:=1.7688, Sum_Search_time:=2.3292, Avg_Gap_init:=16.6009, Avg_Gap_best:=11.8815, Avg_Cost_init:=1.8426, Avg_Cost_best:=1.7679, Avg_Otpimal_best:=1.5800, Avg_counts: =21.0769] 43%|████▎     | 13/30 [00:12<00:15,  1.07it/s, Sum_GNN_time:=1.7688, Sum_Search_time:=2.3292, Avg_Gap_init:=16.6009, Avg_Gap_best:=11.8815, Avg_Cost_init:=1.8426, Avg_Cost_best:=1.7679, Avg_Otpimal_best:=1.5800, Avg_counts: =21.0769]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 43%|████▎     | 13/30 [00:13<00:15,  1.07it/s, Sum_GNN_time:=1.9105, Sum_Search_time:=2.5023, Avg_Gap_init:=16.5541, Avg_Gap_best:=11.8065, Avg_Cost_init:=1.8468, Avg_Cost_best:=1.7714, Avg_Otpimal_best:=1.5843, Avg_counts: =21.0000] 47%|████▋     | 14/30 [00:13<00:15,  1.04it/s, Sum_GNN_time:=1.9105, Sum_Search_time:=2.5023, Avg_Gap_init:=16.5541, Avg_Gap_best:=11.8065, Avg_Cost_init:=1.8468, Avg_Cost_best:=1.7714, Avg_Otpimal_best:=1.5843, Avg_counts: =21.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 47%|████▋     | 14/30 [00:14<00:15,  1.04it/s, Sum_GNN_time:=2.0439, Sum_Search_time:=2.6843, Avg_Gap_init:=16.7409, Avg_Gap_best:=11.9345, Avg_Cost_init:=1.8472, Avg_Cost_best:=1.7710, Avg_Otpimal_best:=1.5822, Avg_counts: =21.2000] 50%|█████     | 15/30 [00:14<00:14,  1.06it/s, Sum_GNN_time:=2.0439, Sum_Search_time:=2.6843, Avg_Gap_init:=16.7409, Avg_Gap_best:=11.9345, Avg_Cost_init:=1.8472, Avg_Cost_best:=1.7710, Avg_Otpimal_best:=1.5822, Avg_counts: =21.2000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 50%|█████     | 15/30 [00:15<00:14,  1.06it/s, Sum_GNN_time:=2.1791, Sum_Search_time:=2.8658, Avg_Gap_init:=16.8606, Avg_Gap_best:=12.0710, Avg_Cost_init:=1.8568, Avg_Cost_best:=1.7806, Avg_Otpimal_best:=1.5887, Avg_counts: =21.3750] 53%|█████▎    | 16/30 [00:15<00:13,  1.04it/s, Sum_GNN_time:=2.1791, Sum_Search_time:=2.8658, Avg_Gap_init:=16.8606, Avg_Gap_best:=12.0710, Avg_Cost_init:=1.8568, Avg_Cost_best:=1.7806, Avg_Otpimal_best:=1.5887, Avg_counts: =21.3750]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 53%|█████▎    | 16/30 [00:16<00:13,  1.04it/s, Sum_GNN_time:=2.3136, Sum_Search_time:=3.0470, Avg_Gap_init:=16.6790, Avg_Gap_best:=11.7719, Avg_Cost_init:=1.8496, Avg_Cost_best:=1.7718, Avg_Otpimal_best:=1.5849, Avg_counts: =21.5294] 57%|█████▋    | 17/30 [00:16<00:12,  1.07it/s, Sum_GNN_time:=2.3136, Sum_Search_time:=3.0470, Avg_Gap_init:=16.6790, Avg_Gap_best:=11.7719, Avg_Cost_init:=1.8496, Avg_Cost_best:=1.7718, Avg_Otpimal_best:=1.5849, Avg_counts: =21.5294]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 57%|█████▋    | 17/30 [00:17<00:12,  1.07it/s, Sum_GNN_time:=2.4485, Sum_Search_time:=3.2337, Avg_Gap_init:=16.4954, Avg_Gap_best:=11.6653, Avg_Cost_init:=1.8430, Avg_Cost_best:=1.7665, Avg_Otpimal_best:=1.5817, Avg_counts: =21.3333] 60%|██████    | 18/30 [00:17<00:11,  1.09it/s, Sum_GNN_time:=2.4485, Sum_Search_time:=3.2337, Avg_Gap_init:=16.4954, Avg_Gap_best:=11.6653, Avg_Cost_init:=1.8430, Avg_Cost_best:=1.7665, Avg_Otpimal_best:=1.5817, Avg_counts: =21.3333]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 60%|██████    | 18/30 [00:18<00:11,  1.09it/s, Sum_GNN_time:=2.5917, Sum_Search_time:=3.4047, Avg_Gap_init:=16.7161, Avg_Gap_best:=11.7605, Avg_Cost_init:=1.8547, Avg_Cost_best:=1.7757, Avg_Otpimal_best:=1.5885, Avg_counts: =21.2632] 63%|██████▎   | 19/30 [00:18<00:10,  1.00it/s, Sum_GNN_time:=2.5917, Sum_Search_time:=3.4047, Avg_Gap_init:=16.7161, Avg_Gap_best:=11.7605, Avg_Cost_init:=1.8547, Avg_Cost_best:=1.7757, Avg_Otpimal_best:=1.5885, Avg_counts: =21.2632]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 63%|██████▎   | 19/30 [00:19<00:10,  1.00it/s, Sum_GNN_time:=2.7277, Sum_Search_time:=3.5879, Avg_Gap_init:=16.7120, Avg_Gap_best:=11.8047, Avg_Cost_init:=1.8540, Avg_Cost_best:=1.7759, Avg_Otpimal_best:=1.5880, Avg_counts: =21.4000] 67%|██████▋   | 20/30 [00:19<00:09,  1.02it/s, Sum_GNN_time:=2.7277, Sum_Search_time:=3.5879, Avg_Gap_init:=16.7120, Avg_Gap_best:=11.8047, Avg_Cost_init:=1.8540, Avg_Cost_best:=1.7759, Avg_Otpimal_best:=1.5880, Avg_counts: =21.4000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 67%|██████▋   | 20/30 [00:20<00:09,  1.02it/s, Sum_GNN_time:=2.8626, Sum_Search_time:=3.7696, Avg_Gap_init:=16.7080, Avg_Gap_best:=11.8520, Avg_Cost_init:=1.8519, Avg_Cost_best:=1.7746, Avg_Otpimal_best:=1.5862, Avg_counts: =21.5238] 70%|███████   | 21/30 [00:20<00:08,  1.02it/s, Sum_GNN_time:=2.8626, Sum_Search_time:=3.7696, Avg_Gap_init:=16.7080, Avg_Gap_best:=11.8520, Avg_Cost_init:=1.8519, Avg_Cost_best:=1.7746, Avg_Otpimal_best:=1.5862, Avg_counts: =21.5238]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 70%|███████   | 21/30 [00:21<00:08,  1.02it/s, Sum_GNN_time:=2.9976, Sum_Search_time:=3.9381, Avg_Gap_init:=17.0691, Avg_Gap_best:=12.1662, Avg_Cost_init:=1.8558, Avg_Cost_best:=1.7779, Avg_Otpimal_best:=1.5848, Avg_counts: =21.0000] 73%|███████▎  | 22/30 [00:21<00:07,  1.06it/s, Sum_GNN_time:=2.9976, Sum_Search_time:=3.9381, Avg_Gap_init:=17.0691, Avg_Gap_best:=12.1662, Avg_Cost_init:=1.8558, Avg_Cost_best:=1.7779, Avg_Otpimal_best:=1.5848, Avg_counts: =21.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 73%|███████▎  | 22/30 [00:22<00:07,  1.06it/s, Sum_GNN_time:=3.1323, Sum_Search_time:=4.1190, Avg_Gap_init:=17.1773, Avg_Gap_best:=12.1587, Avg_Cost_init:=1.8639, Avg_Cost_best:=1.7837, Avg_Otpimal_best:=1.5902, Avg_counts: =21.1304] 77%|███████▋  | 23/30 [00:22<00:06,  1.03it/s, Sum_GNN_time:=3.1323, Sum_Search_time:=4.1190, Avg_Gap_init:=17.1773, Avg_Gap_best:=12.1587, Avg_Cost_init:=1.8639, Avg_Cost_best:=1.7837, Avg_Otpimal_best:=1.5902, Avg_counts: =21.1304]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 77%|███████▋  | 23/30 [00:23<00:06,  1.03it/s, Sum_GNN_time:=3.2685, Sum_Search_time:=4.2926, Avg_Gap_init:=17.3606, Avg_Gap_best:=12.2650, Avg_Cost_init:=1.8729, Avg_Cost_best:=1.7912, Avg_Otpimal_best:=1.5952, Avg_counts: =21.0833] 80%|████████  | 24/30 [00:23<00:05,  1.02it/s, Sum_GNN_time:=3.2685, Sum_Search_time:=4.2926, Avg_Gap_init:=17.3606, Avg_Gap_best:=12.2650, Avg_Cost_init:=1.8729, Avg_Cost_best:=1.7912, Avg_Otpimal_best:=1.5952, Avg_counts: =21.0833]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 80%|████████  | 24/30 [00:24<00:05,  1.02it/s, Sum_GNN_time:=3.4058, Sum_Search_time:=4.4614, Avg_Gap_init:=17.2318, Avg_Gap_best:=12.1244, Avg_Cost_init:=1.8752, Avg_Cost_best:=1.7932, Avg_Otpimal_best:=1.5991, Avg_counts: =20.6400] 83%|████████▎ | 25/30 [00:24<00:04,  1.04it/s, Sum_GNN_time:=3.4058, Sum_Search_time:=4.4614, Avg_Gap_init:=17.2318, Avg_Gap_best:=12.1244, Avg_Cost_init:=1.8752, Avg_Cost_best:=1.7932, Avg_Otpimal_best:=1.5991, Avg_counts: =20.6400]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 83%|████████▎ | 25/30 [00:25<00:04,  1.04it/s, Sum_GNN_time:=3.5400, Sum_Search_time:=4.6445, Avg_Gap_init:=17.2546, Avg_Gap_best:=12.0900, Avg_Cost_init:=1.8756, Avg_Cost_best:=1.7927, Avg_Otpimal_best:=1.5991, Avg_counts: =20.7692] 87%|████████▋ | 26/30 [00:25<00:03,  1.03it/s, Sum_GNN_time:=3.5400, Sum_Search_time:=4.6445, Avg_Gap_init:=17.2546, Avg_Gap_best:=12.0900, Avg_Cost_init:=1.8756, Avg_Cost_best:=1.7927, Avg_Otpimal_best:=1.5991, Avg_counts: =20.7692]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 87%|████████▋ | 26/30 [00:26<00:03,  1.03it/s, Sum_GNN_time:=3.6741, Sum_Search_time:=4.8260, Avg_Gap_init:=17.3137, Avg_Gap_best:=12.1918, Avg_Cost_init:=1.8759, Avg_Cost_best:=1.7937, Avg_Otpimal_best:=1.5986, Avg_counts: =20.8889] 90%|█████████ | 27/30 [00:26<00:02,  1.06it/s, Sum_GNN_time:=3.6741, Sum_Search_time:=4.8260, Avg_Gap_init:=17.3137, Avg_Gap_best:=12.1918, Avg_Cost_init:=1.8759, Avg_Cost_best:=1.7937, Avg_Otpimal_best:=1.5986, Avg_counts: =20.8889]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 90%|█████████ | 27/30 [00:26<00:02,  1.06it/s, Sum_GNN_time:=3.8082, Sum_Search_time:=5.0083, Avg_Gap_init:=17.4822, Avg_Gap_best:=12.4461, Avg_Cost_init:=1.8796, Avg_Cost_best:=1.7987, Avg_Otpimal_best:=1.5994, Avg_counts: =21.0000] 93%|█████████▎| 28/30 [00:26<00:01,  1.08it/s, Sum_GNN_time:=3.8082, Sum_Search_time:=5.0083, Avg_Gap_init:=17.4822, Avg_Gap_best:=12.4461, Avg_Cost_init:=1.8796, Avg_Cost_best:=1.7987, Avg_Otpimal_best:=1.5994, Avg_counts: =21.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 93%|█████████▎| 28/30 [00:27<00:01,  1.08it/s, Sum_GNN_time:=3.9453, Sum_Search_time:=5.1909, Avg_Gap_init:=17.5083, Avg_Gap_best:=12.4178, Avg_Cost_init:=1.8845, Avg_Cost_best:=1.8025, Avg_Otpimal_best:=1.6032, Avg_counts: =21.1034] 97%|█████████▋| 29/30 [00:27<00:00,  1.06it/s, Sum_GNN_time:=3.9453, Sum_Search_time:=5.1909, Avg_Gap_init:=17.5083, Avg_Gap_best:=12.4178, Avg_Cost_init:=1.8845, Avg_Cost_best:=1.8025, Avg_Otpimal_best:=1.6032, Avg_counts: =21.1034]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 97%|█████████▋| 29/30 [00:28<00:00,  1.06it/s, Sum_GNN_time:=4.0891, Sum_Search_time:=5.3646, Avg_Gap_init:=17.3531, Avg_Gap_best:=12.2441, Avg_Cost_init:=1.8822, Avg_Cost_best:=1.7999, Avg_Otpimal_best:=1.6034, Avg_counts: =21.0667]100%|██████████| 30/30 [00:28<00:00,  1.06it/s, Sum_GNN_time:=4.0891, Sum_Search_time:=5.3646, Avg_Gap_init:=17.3531, Avg_Gap_best:=12.2441, Avg_Cost_init:=1.8822, Avg_Cost_best:=1.7999, Avg_Otpimal_best:=1.6034, Avg_counts: =21.0667]100%|██████████| 30/30 [00:28<00:00,  1.04it/s, Sum_GNN_time:=4.0891, Sum_Search_time:=5.3646, Avg_Gap_init:=17.3531, Avg_Gap_best:=12.2441, Avg_Cost_init:=1.8822, Avg_Cost_best:=1.7999, Avg_Otpimal_best:=1.6034, Avg_counts: =21.0667]
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Total time for model prediction: 4.0891 seconds
Total time for guided local search: 5.3646 seconds
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=250, data_path='../tsp_input/generated_insatnces_30_size_250', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP250 for 100 and tested in ATSP250 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:02<?, ?it/s, Sum_GNN_time:=0.4825, Sum_Search_time:=0.2027, Avg_Gap_init:=19.8524, Avg_Gap_best:=16.2432, Avg_Cost_init:=1.8529, Avg_Cost_best:=1.7971, Avg_Otpimal_best:=1.5460, Avg_counts: =8.0000]  3%|▎         | 1/30 [00:02<01:12,  2.51s/it, Sum_GNN_time:=0.4825, Sum_Search_time:=0.2027, Avg_Gap_init:=19.8524, Avg_Gap_best:=16.2432, Avg_Cost_init:=1.8529, Avg_Cost_best:=1.7971, Avg_Otpimal_best:=1.5460, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  3%|▎         | 1/30 [00:05<01:12,  2.51s/it, Sum_GNN_time:=0.9819, Sum_Search_time:=0.4317, Avg_Gap_init:=19.0345, Avg_Gap_best:=15.9220, Avg_Cost_init:=1.8243, Avg_Cost_best:=1.7766, Avg_Otpimal_best:=1.5325, Avg_counts: =8.0000]  7%|▋         | 2/30 [00:05<01:10,  2.50s/it, Sum_GNN_time:=0.9819, Sum_Search_time:=0.4317, Avg_Gap_init:=19.0345, Avg_Gap_best:=15.9220, Avg_Cost_init:=1.8243, Avg_Cost_best:=1.7766, Avg_Otpimal_best:=1.5325, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  7%|▋         | 2/30 [00:07<01:10,  2.50s/it, Sum_GNN_time:=1.4642, Sum_Search_time:=0.6352, Avg_Gap_init:=19.2412, Avg_Gap_best:=16.4707, Avg_Cost_init:=1.8883, Avg_Cost_best:=1.8447, Avg_Otpimal_best:=1.5833, Avg_counts: =8.0000] 10%|█         | 3/30 [00:07<01:06,  2.48s/it, Sum_GNN_time:=1.4642, Sum_Search_time:=0.6352, Avg_Gap_init:=19.2412, Avg_Gap_best:=16.4707, Avg_Cost_init:=1.8883, Avg_Cost_best:=1.8447, Avg_Otpimal_best:=1.5833, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 10%|█         | 3/30 [00:09<01:06,  2.48s/it, Sum_GNN_time:=1.9587, Sum_Search_time:=0.8608, Avg_Gap_init:=17.5118, Avg_Gap_best:=14.9551, Avg_Cost_init:=1.8718, Avg_Cost_best:=1.8313, Avg_Otpimal_best:=1.5931, Avg_counts: =8.0000] 13%|█▎        | 4/30 [00:09<01:04,  2.48s/it, Sum_GNN_time:=1.9587, Sum_Search_time:=0.8608, Avg_Gap_init:=17.5118, Avg_Gap_best:=14.9551, Avg_Cost_init:=1.8718, Avg_Cost_best:=1.8313, Avg_Otpimal_best:=1.5931, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 13%|█▎        | 4/30 [00:12<01:04,  2.48s/it, Sum_GNN_time:=2.4494, Sum_Search_time:=1.0639, Avg_Gap_init:=17.2257, Avg_Gap_best:=14.5979, Avg_Cost_init:=1.8577, Avg_Cost_best:=1.8163, Avg_Otpimal_best:=1.5848, Avg_counts: =8.0000] 17%|█▋        | 5/30 [00:12<01:02,  2.48s/it, Sum_GNN_time:=2.4494, Sum_Search_time:=1.0639, Avg_Gap_init:=17.2257, Avg_Gap_best:=14.5979, Avg_Cost_init:=1.8577, Avg_Cost_best:=1.8163, Avg_Otpimal_best:=1.5848, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 17%|█▋        | 5/30 [00:14<01:02,  2.48s/it, Sum_GNN_time:=2.9454, Sum_Search_time:=1.2903, Avg_Gap_init:=17.1418, Avg_Gap_best:=14.4868, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8048, Avg_Otpimal_best:=1.5763, Avg_counts: =8.0000] 20%|██        | 6/30 [00:14<00:59,  2.49s/it, Sum_GNN_time:=2.9454, Sum_Search_time:=1.2903, Avg_Gap_init:=17.1418, Avg_Gap_best:=14.4868, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8048, Avg_Otpimal_best:=1.5763, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 20%|██        | 6/30 [00:17<00:59,  2.49s/it, Sum_GNN_time:=3.4393, Sum_Search_time:=1.4942, Avg_Gap_init:=17.3511, Avg_Gap_best:=14.8193, Avg_Cost_init:=1.8611, Avg_Cost_best:=1.8212, Avg_Otpimal_best:=1.5859, Avg_counts: =8.0000] 23%|██▎       | 7/30 [00:17<00:57,  2.49s/it, Sum_GNN_time:=3.4393, Sum_Search_time:=1.4942, Avg_Gap_init:=17.3511, Avg_Gap_best:=14.8193, Avg_Cost_init:=1.8611, Avg_Cost_best:=1.8212, Avg_Otpimal_best:=1.5859, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 23%|██▎       | 7/30 [00:19<00:57,  2.49s/it, Sum_GNN_time:=3.9405, Sum_Search_time:=1.7210, Avg_Gap_init:=17.6595, Avg_Gap_best:=15.1345, Avg_Cost_init:=1.8641, Avg_Cost_best:=1.8243, Avg_Otpimal_best:=1.5843, Avg_counts: =8.0000] 27%|██▋       | 8/30 [00:19<00:55,  2.50s/it, Sum_GNN_time:=3.9405, Sum_Search_time:=1.7210, Avg_Gap_init:=17.6595, Avg_Gap_best:=15.1345, Avg_Cost_init:=1.8641, Avg_Cost_best:=1.8243, Avg_Otpimal_best:=1.5843, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 27%|██▋       | 8/30 [00:22<00:55,  2.50s/it, Sum_GNN_time:=4.4342, Sum_Search_time:=1.9251, Avg_Gap_init:=17.2375, Avg_Gap_best:=14.6956, Avg_Cost_init:=1.8435, Avg_Cost_best:=1.8038, Avg_Otpimal_best:=1.5721, Avg_counts: =8.0000] 30%|███       | 9/30 [00:22<00:52,  2.51s/it, Sum_GNN_time:=4.4342, Sum_Search_time:=1.9251, Avg_Gap_init:=17.2375, Avg_Gap_best:=14.6956, Avg_Cost_init:=1.8435, Avg_Cost_best:=1.8038, Avg_Otpimal_best:=1.5721, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 30%|███       | 9/30 [00:24<00:52,  2.51s/it, Sum_GNN_time:=4.9313, Sum_Search_time:=2.1522, Avg_Gap_init:=16.6412, Avg_Gap_best:=14.1338, Avg_Cost_init:=1.8382, Avg_Cost_best:=1.7989, Avg_Otpimal_best:=1.5758, Avg_counts: =8.0000] 33%|███▎      | 10/30 [00:24<00:50,  2.51s/it, Sum_GNN_time:=4.9313, Sum_Search_time:=2.1522, Avg_Gap_init:=16.6412, Avg_Gap_best:=14.1338, Avg_Cost_init:=1.8382, Avg_Cost_best:=1.7989, Avg_Otpimal_best:=1.5758, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 33%|███▎      | 10/30 [00:27<00:50,  2.51s/it, Sum_GNN_time:=5.4226, Sum_Search_time:=2.3541, Avg_Gap_init:=17.9788, Avg_Gap_best:=15.4631, Avg_Cost_init:=1.8710, Avg_Cost_best:=1.8313, Avg_Otpimal_best:=1.5847, Avg_counts: =8.0000] 37%|███▋      | 11/30 [00:27<00:47,  2.52s/it, Sum_GNN_time:=5.4226, Sum_Search_time:=2.3541, Avg_Gap_init:=17.9788, Avg_Gap_best:=15.4631, Avg_Cost_init:=1.8710, Avg_Cost_best:=1.8313, Avg_Otpimal_best:=1.5847, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 37%|███▋      | 11/30 [00:29<00:47,  2.52s/it, Sum_GNN_time:=5.9328, Sum_Search_time:=2.5859, Avg_Gap_init:=17.5687, Avg_Gap_best:=15.1751, Avg_Cost_init:=1.8566, Avg_Cost_best:=1.8189, Avg_Otpimal_best:=1.5779, Avg_counts: =8.0000] 40%|████      | 12/30 [00:29<00:44,  2.49s/it, Sum_GNN_time:=5.9328, Sum_Search_time:=2.5859, Avg_Gap_init:=17.5687, Avg_Gap_best:=15.1751, Avg_Cost_init:=1.8566, Avg_Cost_best:=1.8189, Avg_Otpimal_best:=1.5779, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 40%|████      | 12/30 [00:32<00:44,  2.49s/it, Sum_GNN_time:=6.4152, Sum_Search_time:=2.7888, Avg_Gap_init:=17.6024, Avg_Gap_best:=15.2297, Avg_Cost_init:=1.8614, Avg_Cost_best:=1.8240, Avg_Otpimal_best:=1.5816, Avg_counts: =8.0000] 43%|████▎     | 13/30 [00:32<00:42,  2.49s/it, Sum_GNN_time:=6.4152, Sum_Search_time:=2.7888, Avg_Gap_init:=17.6024, Avg_Gap_best:=15.2297, Avg_Cost_init:=1.8614, Avg_Cost_best:=1.8240, Avg_Otpimal_best:=1.5816, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 43%|████▎     | 13/30 [00:34<00:42,  2.49s/it, Sum_GNN_time:=6.9229, Sum_Search_time:=3.0153, Avg_Gap_init:=18.0634, Avg_Gap_best:=15.6567, Avg_Cost_init:=1.8797, Avg_Cost_best:=1.8414, Avg_Otpimal_best:=1.5905, Avg_counts: =8.0000] 47%|████▋     | 14/30 [00:34<00:40,  2.50s/it, Sum_GNN_time:=6.9229, Sum_Search_time:=3.0153, Avg_Gap_init:=18.0634, Avg_Gap_best:=15.6567, Avg_Cost_init:=1.8797, Avg_Cost_best:=1.8414, Avg_Otpimal_best:=1.5905, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 47%|████▋     | 14/30 [00:37<00:40,  2.50s/it, Sum_GNN_time:=7.4063, Sum_Search_time:=3.2200, Avg_Gap_init:=17.6286, Avg_Gap_best:=15.2479, Avg_Cost_init:=1.8557, Avg_Cost_best:=1.8181, Avg_Otpimal_best:=1.5753, Avg_counts: =8.0000] 50%|█████     | 15/30 [00:37<00:37,  2.49s/it, Sum_GNN_time:=7.4063, Sum_Search_time:=3.2200, Avg_Gap_init:=17.6286, Avg_Gap_best:=15.2479, Avg_Cost_init:=1.8557, Avg_Cost_best:=1.8181, Avg_Otpimal_best:=1.5753, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 50%|█████     | 15/30 [00:39<00:37,  2.49s/it, Sum_GNN_time:=7.9123, Sum_Search_time:=3.4467, Avg_Gap_init:=17.4955, Avg_Gap_best:=15.1361, Avg_Cost_init:=1.8396, Avg_Cost_best:=1.8026, Avg_Otpimal_best:=1.5633, Avg_counts: =8.0000] 53%|█████▎    | 16/30 [00:39<00:35,  2.51s/it, Sum_GNN_time:=7.9123, Sum_Search_time:=3.4467, Avg_Gap_init:=17.4955, Avg_Gap_best:=15.1361, Avg_Cost_init:=1.8396, Avg_Cost_best:=1.8026, Avg_Otpimal_best:=1.5633, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 53%|█████▎    | 16/30 [00:42<00:35,  2.51s/it, Sum_GNN_time:=8.4091, Sum_Search_time:=3.6562, Avg_Gap_init:=17.5554, Avg_Gap_best:=15.1756, Avg_Cost_init:=1.8463, Avg_Cost_best:=1.8089, Avg_Otpimal_best:=1.5683, Avg_counts: =8.0000] 57%|█████▋    | 17/30 [00:42<00:32,  2.46s/it, Sum_GNN_time:=8.4091, Sum_Search_time:=3.6562, Avg_Gap_init:=17.5554, Avg_Gap_best:=15.1756, Avg_Cost_init:=1.8463, Avg_Cost_best:=1.8089, Avg_Otpimal_best:=1.5683, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 57%|█████▋    | 17/30 [00:44<00:32,  2.46s/it, Sum_GNN_time:=8.9066, Sum_Search_time:=3.8820, Avg_Gap_init:=17.5410, Avg_Gap_best:=15.1679, Avg_Cost_init:=1.8455, Avg_Cost_best:=1.8082, Avg_Otpimal_best:=1.5680, Avg_counts: =8.0000] 60%|██████    | 18/30 [00:44<00:30,  2.51s/it, Sum_GNN_time:=8.9066, Sum_Search_time:=3.8820, Avg_Gap_init:=17.5410, Avg_Gap_best:=15.1679, Avg_Cost_init:=1.8455, Avg_Cost_best:=1.8082, Avg_Otpimal_best:=1.5680, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 60%|██████    | 18/30 [00:47<00:30,  2.51s/it, Sum_GNN_time:=9.3939, Sum_Search_time:=4.0869, Avg_Gap_init:=17.5673, Avg_Gap_best:=15.2732, Avg_Cost_init:=1.8500, Avg_Cost_best:=1.8139, Avg_Otpimal_best:=1.5715, Avg_counts: =8.0000] 63%|██████▎   | 19/30 [00:47<00:27,  2.52s/it, Sum_GNN_time:=9.3939, Sum_Search_time:=4.0869, Avg_Gap_init:=17.5673, Avg_Gap_best:=15.2732, Avg_Cost_init:=1.8500, Avg_Cost_best:=1.8139, Avg_Otpimal_best:=1.5715, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 63%|██████▎   | 19/30 [00:50<00:27,  2.52s/it, Sum_GNN_time:=9.9017, Sum_Search_time:=4.3126, Avg_Gap_init:=17.3628, Avg_Gap_best:=15.1119, Avg_Cost_init:=1.8440, Avg_Cost_best:=1.8086, Avg_Otpimal_best:=1.5692, Avg_counts: =8.0000] 67%|██████▋   | 20/30 [00:50<00:25,  2.52s/it, Sum_GNN_time:=9.9017, Sum_Search_time:=4.3126, Avg_Gap_init:=17.3628, Avg_Gap_best:=15.1119, Avg_Cost_init:=1.8440, Avg_Cost_best:=1.8086, Avg_Otpimal_best:=1.5692, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 67%|██████▋   | 20/30 [00:52<00:25,  2.52s/it, Sum_GNN_time:=10.3890, Sum_Search_time:=4.5173, Avg_Gap_init:=17.5321, Avg_Gap_best:=15.2625, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.8073, Avg_Otpimal_best:=1.5662, Avg_counts: =8.0000] 70%|███████   | 21/30 [00:52<00:22,  2.51s/it, Sum_GNN_time:=10.3890, Sum_Search_time:=4.5173, Avg_Gap_init:=17.5321, Avg_Gap_best:=15.2625, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.8073, Avg_Otpimal_best:=1.5662, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 70%|███████   | 21/30 [00:54<00:22,  2.51s/it, Sum_GNN_time:=10.8937, Sum_Search_time:=4.7466, Avg_Gap_init:=17.5947, Avg_Gap_best:=15.4000, Avg_Cost_init:=1.8482, Avg_Cost_best:=1.8138, Avg_Otpimal_best:=1.5699, Avg_counts: =8.0000] 73%|███████▎  | 22/30 [00:54<00:19,  2.47s/it, Sum_GNN_time:=10.8937, Sum_Search_time:=4.7466, Avg_Gap_init:=17.5947, Avg_Gap_best:=15.4000, Avg_Cost_init:=1.8482, Avg_Cost_best:=1.8138, Avg_Otpimal_best:=1.5699, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 73%|███████▎  | 22/30 [00:57<00:19,  2.47s/it, Sum_GNN_time:=11.3868, Sum_Search_time:=4.9479, Avg_Gap_init:=17.5136, Avg_Gap_best:=15.3129, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8119, Avg_Otpimal_best:=1.5695, Avg_counts: =8.0000] 77%|███████▋  | 23/30 [00:57<00:17,  2.49s/it, Sum_GNN_time:=11.3868, Sum_Search_time:=4.9479, Avg_Gap_init:=17.5136, Avg_Gap_best:=15.3129, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8119, Avg_Otpimal_best:=1.5695, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 77%|███████▋  | 23/30 [01:00<00:17,  2.49s/it, Sum_GNN_time:=11.8908, Sum_Search_time:=5.1775, Avg_Gap_init:=17.3812, Avg_Gap_best:=15.1804, Avg_Cost_init:=1.8410, Avg_Cost_best:=1.8065, Avg_Otpimal_best:=1.5667, Avg_counts: =8.0000] 80%|████████  | 24/30 [01:00<00:15,  2.54s/it, Sum_GNN_time:=11.8908, Sum_Search_time:=5.1775, Avg_Gap_init:=17.3812, Avg_Gap_best:=15.1804, Avg_Cost_init:=1.8410, Avg_Cost_best:=1.8065, Avg_Otpimal_best:=1.5667, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 80%|████████  | 24/30 [01:02<00:15,  2.54s/it, Sum_GNN_time:=12.3777, Sum_Search_time:=5.3809, Avg_Gap_init:=17.2540, Avg_Gap_best:=15.0714, Avg_Cost_init:=1.8394, Avg_Cost_best:=1.8052, Avg_Otpimal_best:=1.5671, Avg_counts: =8.0000] 83%|████████▎ | 25/30 [01:02<00:12,  2.52s/it, Sum_GNN_time:=12.3777, Sum_Search_time:=5.3809, Avg_Gap_init:=17.2540, Avg_Gap_best:=15.0714, Avg_Cost_init:=1.8394, Avg_Cost_best:=1.8052, Avg_Otpimal_best:=1.5671, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 83%|████████▎ | 25/30 [01:05<00:12,  2.52s/it, Sum_GNN_time:=12.8837, Sum_Search_time:=5.6092, Avg_Gap_init:=17.3943, Avg_Gap_best:=15.1720, Avg_Cost_init:=1.8413, Avg_Cost_best:=1.8065, Avg_Otpimal_best:=1.5669, Avg_counts: =8.0000] 87%|████████▋ | 26/30 [01:05<00:10,  2.54s/it, Sum_GNN_time:=12.8837, Sum_Search_time:=5.6092, Avg_Gap_init:=17.3943, Avg_Gap_best:=15.1720, Avg_Cost_init:=1.8413, Avg_Cost_best:=1.8065, Avg_Otpimal_best:=1.5669, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 87%|████████▋ | 26/30 [01:07<00:10,  2.54s/it, Sum_GNN_time:=13.3800, Sum_Search_time:=5.8161, Avg_Gap_init:=17.4107, Avg_Gap_best:=15.1612, Avg_Cost_init:=1.8404, Avg_Cost_best:=1.8052, Avg_Otpimal_best:=1.5660, Avg_counts: =8.0000] 90%|█████████ | 27/30 [01:07<00:07,  2.48s/it, Sum_GNN_time:=13.3800, Sum_Search_time:=5.8161, Avg_Gap_init:=17.4107, Avg_Gap_best:=15.1612, Avg_Cost_init:=1.8404, Avg_Cost_best:=1.8052, Avg_Otpimal_best:=1.5660, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 90%|█████████ | 27/30 [01:10<00:07,  2.48s/it, Sum_GNN_time:=13.8783, Sum_Search_time:=6.0468, Avg_Gap_init:=17.2000, Avg_Gap_best:=15.0079, Avg_Cost_init:=1.8364, Avg_Cost_best:=1.8021, Avg_Otpimal_best:=1.5654, Avg_counts: =8.0000] 93%|█████████▎| 28/30 [01:10<00:05,  2.51s/it, Sum_GNN_time:=13.8783, Sum_Search_time:=6.0468, Avg_Gap_init:=17.2000, Avg_Gap_best:=15.0079, Avg_Cost_init:=1.8364, Avg_Cost_best:=1.8021, Avg_Otpimal_best:=1.5654, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 93%|█████████▎| 28/30 [01:12<00:05,  2.51s/it, Sum_GNN_time:=14.3721, Sum_Search_time:=6.2499, Avg_Gap_init:=17.2439, Avg_Gap_best:=15.0615, Avg_Cost_init:=1.8333, Avg_Cost_best:=1.7993, Avg_Otpimal_best:=1.5623, Avg_counts: =8.0000] 97%|█████████▋| 29/30 [01:12<00:02,  2.50s/it, Sum_GNN_time:=14.3721, Sum_Search_time:=6.2499, Avg_Gap_init:=17.2439, Avg_Gap_best:=15.0615, Avg_Cost_init:=1.8333, Avg_Cost_best:=1.7993, Avg_Otpimal_best:=1.5623, Avg_counts: =8.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 97%|█████████▋| 29/30 [01:15<00:02,  2.50s/it, Sum_GNN_time:=14.8710, Sum_Search_time:=6.4756, Avg_Gap_init:=17.1538, Avg_Gap_best:=14.9830, Avg_Cost_init:=1.8317, Avg_Cost_best:=1.7978, Avg_Otpimal_best:=1.5621, Avg_counts: =8.0000]100%|██████████| 30/30 [01:15<00:00,  2.51s/it, Sum_GNN_time:=14.8710, Sum_Search_time:=6.4756, Avg_Gap_init:=17.1538, Avg_Gap_best:=14.9830, Avg_Cost_init:=1.8317, Avg_Cost_best:=1.7978, Avg_Otpimal_best:=1.5621, Avg_counts: =8.0000]100%|██████████| 30/30 [01:15<00:00,  2.50s/it, Sum_GNN_time:=14.8710, Sum_Search_time:=6.4756, Avg_Gap_init:=17.1538, Avg_Gap_best:=14.9830, Avg_Cost_init:=1.8317, Avg_Cost_best:=1.7978, Avg_Otpimal_best:=1.5621, Avg_counts: =8.0000]
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Total time for model prediction: 14.8710 seconds
Total time for guided local search: 6.4756 seconds
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=500, data_path='../tsp_input/generated_insatnces_30_size_500', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP500 for 100 and tested in ATSP500 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:05<?, ?it/s]
Traceback (most recent call last):
  File "/project/c_gnn_001/code/tsp/atsp_gnn/test.py", line 158, in <module>
    main(args_test)
  File "/project/c_gnn_001/code/tsp/atsp_gnn/test.py", line 68, in main
    y_pred = model(H, x)
             ^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/code/tsp/atsp_gnn/gnngls/model.py", line 34, in forward
    h2 = gnn_layer(graph, h1)
         ^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/nn/pytorch/hetero.py", line 210, in forward
    dstdata = self._get_module((stype, etype, dtype))(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/nn/pytorch/conv/gatconv.py", line 340, in forward
    graph.edata["a"] = self.attn_drop(edge_softmax(graph, e))
                                      ^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/ops/edge_softmax.py", line 136, in edge_softmax
    return edge_softmax_internal(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/backend/pytorch/sparse.py", line 1116, in edge_softmax
    return EdgeSoftmax.apply(*args)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/autograd/function.py", line 575, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/backend/pytorch/sparse.py", line 710, in forward
    score_max = _gspmm(gidx, "copy_rhs", "max", None, score)[0]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/_sparse_ops.py", line 239, in _gspmm
    _CAPI_DGLKernelSpMM(
  File "dgl/_ffi/_cython/./function.pxi", line 295, in dgl._ffi._cy3.core.FunctionBase.__call__
  File "dgl/_ffi/_cython/./function.pxi", line 241, in dgl._ffi._cy3.core.FuncCall
dgl._ffi.base.DGLError: [10:40:51] /opt/dgl/src/runtime/cuda/cuda_device_api.cc:117: Check failed: e == cudaSuccess || e == cudaErrorCudartUnloading: CUDA: out of memory
Stack trace:
  [bt] (0) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(+0xa75414) [0x7f73d0197414]
  [bt] (1) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(dgl::runtime::CUDADeviceAPI::AllocDataSpace(DGLContext, unsigned long, unsigned long, DGLDataType)+0x20d) [0x7f73d0199f3d]
  [bt] (2) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(dgl::runtime::NDArray::Empty(std::vector<long, std::allocator<long> >, DGLDataType, DGLContext)+0x162) [0x7f73d0016962]
  [bt] (3) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(dgl::aten::NewIdArray(long, DGLContext, unsigned char)+0x72) [0x7f73cfabe472]
  [bt] (4) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(dgl::runtime::NDArray dgl::aten::impl::Range<(DGLDeviceType)2, long>(long, long, DGLContext)+0x97) [0x7f73d01bbeb7]
  [bt] (5) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(dgl::aten::Range(long, long, unsigned char, DGLContext)+0x1bd) [0x7f73cfabf53d]
  [bt] (6) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(std::pair<dgl::runtime::NDArray, dgl::runtime::NDArray> dgl::aten::impl::Sort<(DGLDeviceType)2, int>(dgl::runtime::NDArray, int)+0x53) [0x7f73d01ccb13]
  [bt] (7) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(dgl::aten::Sort(dgl::runtime::NDArray, int)+0x522) [0x7f73cfae3dc2]
  [bt] (8) /project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/libdgl.so(void dgl::aten::impl::COOSort_<(DGLDeviceType)2, int>(dgl::aten::COOMatrix*, bool)+0x38c) [0x7f73d01d703c]


