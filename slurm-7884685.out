/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='EdgePropertyPredictionModel1', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
device = cuda
  0%|          | 0/100 [00:00<?, ?it/s]  0%|          | 0/100 [00:05<?, ?it/s]
Traceback (most recent call last):
  File "/project/c_gnn_001/code/tsp/atsp_gnn/train.py", line 171, in <module>
    best_val_result, best_avg_gap_result, run_name = train(args, trial_id, run_name)
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/code/tsp/atsp_gnn/train.py", line 118, in train
    result['train_loss'][epoch] = epoch_train(model, train_loader, criterion, optimizer, args.device)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/code/tsp/atsp_gnn/train.py", line 32, in epoch_train
    y_pred = model(batch, x)
             ^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/code/tsp/atsp_gnn/gnngls/model.py", line 94, in forward
    h = l(G, h) + h
        ^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/code/tsp/atsp_gnn/gnngls/model_utils.py", line 58, in forward
    h = self.message_passing(x, G=G).view(G.number_of_nodes(), -1)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/code/tsp/atsp_gnn/gnngls/model_utils.py", line 32, in forward
    y = self.module(G, x).view(G.number_of_nodes(), -1)
        ^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/nn/pytorch/conv/gatconv.py", line 278, in forward
    if (graph.in_degrees() == 0).any():
        ^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/heterograph.py", line 3668, in in_degrees
    dsttype = self.to_canonical_etype(etype)[2]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/heterograph.py", line 1279, in to_canonical_etype
    raise DGLError(
dgl._ffi.base.DGLError: Edge type name must be specified if there are more than one edge types.
