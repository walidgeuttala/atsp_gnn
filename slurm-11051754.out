/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=100, data_path='../tsp_input/generated_insatnces_30_size_100', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP100 for 100 and tested in ATSP100 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:09<?, ?it/s, Sum_GNN_time:=8.9798, Sum_Search_time:=0.1825, Avg_Gap_init:=7.4939, Avg_Gap_best:=6.0387, Avg_Cost_init:=1.7212, Avg_Cost_best:=1.6979, Avg_Otpimal_best:=1.6012, Avg_counts: =24.0000]  3%|▎         | 1/30 [00:09<04:42,  9.75s/it, Sum_GNN_time:=8.9798, Sum_Search_time:=0.1825, Avg_Gap_init:=7.4939, Avg_Gap_best:=6.0387, Avg_Cost_init:=1.7212, Avg_Cost_best:=1.6979, Avg_Otpimal_best:=1.6012, Avg_counts: =24.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  3%|▎         | 1/30 [00:10<04:42,  9.75s/it, Sum_GNN_time:=9.0307, Sum_Search_time:=0.3436, Avg_Gap_init:=15.3587, Avg_Gap_best:=9.6026, Avg_Cost_init:=1.8898, Avg_Cost_best:=1.7941, Avg_Otpimal_best:=1.6358, Avg_counts: =24.0000]  7%|▋         | 2/30 [00:10<02:01,  4.33s/it, Sum_GNN_time:=9.0307, Sum_Search_time:=0.3436, Avg_Gap_init:=15.3587, Avg_Gap_best:=9.6026, Avg_Cost_init:=1.8898, Avg_Cost_best:=1.7941, Avg_Otpimal_best:=1.6358, Avg_counts: =24.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  7%|▋         | 2/30 [00:10<02:01,  4.33s/it, Sum_GNN_time:=9.0812, Sum_Search_time:=0.5038, Avg_Gap_init:=16.7881, Avg_Gap_best:=10.4910, Avg_Cost_init:=1.8315, Avg_Cost_best:=1.7325, Avg_Otpimal_best:=1.5684, Avg_counts: =24.0000] 10%|█         | 3/30 [00:10<01:09,  2.56s/it, Sum_GNN_time:=9.0812, Sum_Search_time:=0.5038, Avg_Gap_init:=16.7881, Avg_Gap_best:=10.4910, Avg_Cost_init:=1.8315, Avg_Cost_best:=1.7325, Avg_Otpimal_best:=1.5684, Avg_counts: =24.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 10%|█         | 3/30 [00:11<01:09,  2.56s/it, Sum_GNN_time:=9.1318, Sum_Search_time:=0.6772, Avg_Gap_init:=15.5815, Avg_Gap_best:=10.1982, Avg_Cost_init:=1.7876, Avg_Cost_best:=1.7035, Avg_Otpimal_best:=1.5460, Avg_counts: =22.5000] 13%|█▎        | 4/30 [00:11<00:45,  1.74s/it, Sum_GNN_time:=9.1318, Sum_Search_time:=0.6772, Avg_Gap_init:=15.5815, Avg_Gap_best:=10.1982, Avg_Cost_init:=1.7876, Avg_Cost_best:=1.7035, Avg_Otpimal_best:=1.5460, Avg_counts: =22.5000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 13%|█▎        | 4/30 [00:11<00:45,  1.74s/it, Sum_GNN_time:=9.1825, Sum_Search_time:=0.8531, Avg_Gap_init:=14.6559, Avg_Gap_best:=10.0834, Avg_Cost_init:=1.7545, Avg_Cost_best:=1.6834, Avg_Otpimal_best:=1.5292, Avg_counts: =22.0000] 17%|█▋        | 5/30 [00:11<00:32,  1.32s/it, Sum_GNN_time:=9.1825, Sum_Search_time:=0.8531, Avg_Gap_init:=14.6559, Avg_Gap_best:=10.0834, Avg_Cost_init:=1.7545, Avg_Cost_best:=1.6834, Avg_Otpimal_best:=1.5292, Avg_counts: =22.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 17%|█▋        | 5/30 [00:12<00:32,  1.32s/it, Sum_GNN_time:=9.2336, Sum_Search_time:=1.0266, Avg_Gap_init:=13.5015, Avg_Gap_best:=9.1906, Avg_Cost_init:=1.7553, Avg_Cost_best:=1.6879, Avg_Otpimal_best:=1.5465, Avg_counts: =21.6667]  20%|██        | 6/30 [00:12<00:25,  1.05s/it, Sum_GNN_time:=9.2336, Sum_Search_time:=1.0266, Avg_Gap_init:=13.5015, Avg_Gap_best:=9.1906, Avg_Cost_init:=1.7553, Avg_Cost_best:=1.6879, Avg_Otpimal_best:=1.5465, Avg_counts: =21.6667]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 20%|██        | 6/30 [00:12<00:25,  1.05s/it, Sum_GNN_time:=9.2846, Sum_Search_time:=1.1924, Avg_Gap_init:=14.5991, Avg_Gap_best:=9.7729, Avg_Cost_init:=1.8038, Avg_Cost_best:=1.7264, Avg_Otpimal_best:=1.5725, Avg_counts: =20.2857] 23%|██▎       | 7/30 [00:12<00:19,  1.16it/s, Sum_GNN_time:=9.2846, Sum_Search_time:=1.1924, Avg_Gap_init:=14.5991, Avg_Gap_best:=9.7729, Avg_Cost_init:=1.8038, Avg_Cost_best:=1.7264, Avg_Otpimal_best:=1.5725, Avg_counts: =20.2857]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 23%|██▎       | 7/30 [00:13<00:19,  1.16it/s, Sum_GNN_time:=9.3362, Sum_Search_time:=1.3532, Avg_Gap_init:=16.2956, Avg_Gap_best:=10.2139, Avg_Cost_init:=1.8790, Avg_Cost_best:=1.7764, Avg_Otpimal_best:=1.6105, Avg_counts: =20.7500] 27%|██▋       | 8/30 [00:13<00:16,  1.36it/s, Sum_GNN_time:=9.3362, Sum_Search_time:=1.3532, Avg_Gap_init:=16.2956, Avg_Gap_best:=10.2139, Avg_Cost_init:=1.8790, Avg_Cost_best:=1.7764, Avg_Otpimal_best:=1.6105, Avg_counts: =20.7500]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 27%|██▋       | 8/30 [00:13<00:16,  1.36it/s, Sum_GNN_time:=9.3872, Sum_Search_time:=1.5295, Avg_Gap_init:=16.0686, Avg_Gap_best:=10.3376, Avg_Cost_init:=1.8675, Avg_Cost_best:=1.7713, Avg_Otpimal_best:=1.6043, Avg_counts: =20.6667] 30%|███       | 9/30 [00:13<00:14,  1.44it/s, Sum_GNN_time:=9.3872, Sum_Search_time:=1.5295, Avg_Gap_init:=16.0686, Avg_Gap_best:=10.3376, Avg_Cost_init:=1.8675, Avg_Cost_best:=1.7713, Avg_Otpimal_best:=1.6043, Avg_counts: =20.6667]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 30%|███       | 9/30 [00:14<00:14,  1.44it/s, Sum_GNN_time:=9.4418, Sum_Search_time:=1.7084, Avg_Gap_init:=15.9176, Avg_Gap_best:=10.2081, Avg_Cost_init:=1.8760, Avg_Cost_best:=1.7800, Avg_Otpimal_best:=1.6142, Avg_counts: =21.0000] 33%|███▎      | 10/30 [00:14<00:13,  1.52it/s, Sum_GNN_time:=9.4418, Sum_Search_time:=1.7084, Avg_Gap_init:=15.9176, Avg_Gap_best:=10.2081, Avg_Cost_init:=1.8760, Avg_Cost_best:=1.7800, Avg_Otpimal_best:=1.6142, Avg_counts: =21.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 33%|███▎      | 10/30 [00:14<00:13,  1.52it/s, Sum_GNN_time:=9.4962, Sum_Search_time:=1.8863, Avg_Gap_init:=16.0703, Avg_Gap_best:=10.3962, Avg_Cost_init:=1.8937, Avg_Cost_best:=1.7979, Avg_Otpimal_best:=1.6276, Avg_counts: =20.7273] 37%|███▋      | 11/30 [00:14<00:11,  1.65it/s, Sum_GNN_time:=9.4962, Sum_Search_time:=1.8863, Avg_Gap_init:=16.0703, Avg_Gap_best:=10.3962, Avg_Cost_init:=1.8937, Avg_Cost_best:=1.7979, Avg_Otpimal_best:=1.6276, Avg_counts: =20.7273]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 37%|███▋      | 11/30 [00:15<00:11,  1.65it/s, Sum_GNN_time:=9.5470, Sum_Search_time:=2.0592, Avg_Gap_init:=15.3898, Avg_Gap_best:=10.1154, Avg_Cost_init:=1.8598, Avg_Cost_best:=1.7709, Avg_Otpimal_best:=1.6067, Avg_counts: =20.5000] 40%|████      | 12/30 [00:15<00:10,  1.78it/s, Sum_GNN_time:=9.5470, Sum_Search_time:=2.0592, Avg_Gap_init:=15.3898, Avg_Gap_best:=10.1154, Avg_Cost_init:=1.8598, Avg_Cost_best:=1.7709, Avg_Otpimal_best:=1.6067, Avg_counts: =20.5000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 40%|████      | 12/30 [00:15<00:10,  1.78it/s, Sum_GNN_time:=9.5983, Sum_Search_time:=2.2336, Avg_Gap_init:=14.9845, Avg_Gap_best:=9.9020, Avg_Cost_init:=1.8421, Avg_Cost_best:=1.7569, Avg_Otpimal_best:=1.5970, Avg_counts: =20.3077]  43%|████▎     | 13/30 [00:15<00:09,  1.87it/s, Sum_GNN_time:=9.5983, Sum_Search_time:=2.2336, Avg_Gap_init:=14.9845, Avg_Gap_best:=9.9020, Avg_Cost_init:=1.8421, Avg_Cost_best:=1.7569, Avg_Otpimal_best:=1.5970, Avg_counts: =20.3077]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 43%|████▎     | 13/30 [00:16<00:09,  1.87it/s, Sum_GNN_time:=9.6492, Sum_Search_time:=2.3942, Avg_Gap_init:=15.6092, Avg_Gap_best:=9.9228, Avg_Cost_init:=1.8528, Avg_Cost_best:=1.7582, Avg_Otpimal_best:=1.5980, Avg_counts: =20.5714] 47%|████▋     | 14/30 [00:16<00:08,  1.96it/s, Sum_GNN_time:=9.6492, Sum_Search_time:=2.3942, Avg_Gap_init:=15.6092, Avg_Gap_best:=9.9228, Avg_Cost_init:=1.8528, Avg_Cost_best:=1.7582, Avg_Otpimal_best:=1.5980, Avg_counts: =20.5714]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 47%|████▋     | 14/30 [00:16<00:08,  1.96it/s, Sum_GNN_time:=9.6998, Sum_Search_time:=2.5681, Avg_Gap_init:=15.2495, Avg_Gap_best:=9.6738, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.7505, Avg_Otpimal_best:=1.5945, Avg_counts: =20.5333] 50%|█████     | 15/30 [00:16<00:07,  1.92it/s, Sum_GNN_time:=9.6998, Sum_Search_time:=2.5681, Avg_Gap_init:=15.2495, Avg_Gap_best:=9.6738, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.7505, Avg_Otpimal_best:=1.5945, Avg_counts: =20.5333]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 50%|█████     | 15/30 [00:17<00:07,  1.92it/s, Sum_GNN_time:=9.7506, Sum_Search_time:=2.7303, Avg_Gap_init:=15.6367, Avg_Gap_best:=9.9096, Avg_Cost_init:=1.8533, Avg_Cost_best:=1.7583, Avg_Otpimal_best:=1.5982, Avg_counts: =20.7500] 53%|█████▎    | 16/30 [00:17<00:07,  1.99it/s, Sum_GNN_time:=9.7506, Sum_Search_time:=2.7303, Avg_Gap_init:=15.6367, Avg_Gap_best:=9.9096, Avg_Cost_init:=1.8533, Avg_Cost_best:=1.7583, Avg_Otpimal_best:=1.5982, Avg_counts: =20.7500]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 53%|█████▎    | 16/30 [00:17<00:07,  1.99it/s, Sum_GNN_time:=9.8016, Sum_Search_time:=2.9051, Avg_Gap_init:=15.3189, Avg_Gap_best:=9.6840, Avg_Cost_init:=1.8506, Avg_Cost_best:=1.7572, Avg_Otpimal_best:=1.6007, Avg_counts: =20.7059] 57%|█████▋    | 17/30 [00:17<00:06,  2.02it/s, Sum_GNN_time:=9.8016, Sum_Search_time:=2.9051, Avg_Gap_init:=15.3189, Avg_Gap_best:=9.6840, Avg_Cost_init:=1.8506, Avg_Cost_best:=1.7572, Avg_Otpimal_best:=1.6007, Avg_counts: =20.7059]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 57%|█████▋    | 17/30 [00:18<00:06,  2.02it/s, Sum_GNN_time:=9.8524, Sum_Search_time:=3.0822, Avg_Gap_init:=15.1377, Avg_Gap_best:=9.5386, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7514, Avg_Otpimal_best:=1.5975, Avg_counts: =20.5556] 60%|██████    | 18/30 [00:18<00:05,  2.05it/s, Sum_GNN_time:=9.8524, Sum_Search_time:=3.0822, Avg_Gap_init:=15.1377, Avg_Gap_best:=9.5386, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7514, Avg_Otpimal_best:=1.5975, Avg_counts: =20.5556]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 60%|██████    | 18/30 [00:18<00:05,  2.05it/s, Sum_GNN_time:=9.9031, Sum_Search_time:=3.2572, Avg_Gap_init:=15.0690, Avg_Gap_best:=9.6187, Avg_Cost_init:=1.8328, Avg_Cost_best:=1.7431, Avg_Otpimal_best:=1.5890, Avg_counts: =20.5263] 63%|██████▎   | 19/30 [00:18<00:05,  1.98it/s, Sum_GNN_time:=9.9031, Sum_Search_time:=3.2572, Avg_Gap_init:=15.0690, Avg_Gap_best:=9.6187, Avg_Cost_init:=1.8328, Avg_Cost_best:=1.7431, Avg_Otpimal_best:=1.5890, Avg_counts: =20.5263]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 63%|██████▎   | 19/30 [00:19<00:05,  1.98it/s, Sum_GNN_time:=9.9538, Sum_Search_time:=3.4427, Avg_Gap_init:=14.8763, Avg_Gap_best:=9.3937, Avg_Cost_init:=1.8267, Avg_Cost_best:=1.7368, Avg_Otpimal_best:=1.5864, Avg_counts: =20.4000] 67%|██████▋   | 20/30 [00:19<00:05,  2.00it/s, Sum_GNN_time:=9.9538, Sum_Search_time:=3.4427, Avg_Gap_init:=14.8763, Avg_Gap_best:=9.3937, Avg_Cost_init:=1.8267, Avg_Cost_best:=1.7368, Avg_Otpimal_best:=1.5864, Avg_counts: =20.4000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 67%|██████▋   | 20/30 [00:19<00:05,  2.00it/s, Sum_GNN_time:=10.0081, Sum_Search_time:=3.6090, Avg_Gap_init:=14.6727, Avg_Gap_best:=9.2593, Avg_Cost_init:=1.8085, Avg_Cost_best:=1.7204, Avg_Otpimal_best:=1.5731, Avg_counts: =20.1905] 70%|███████   | 21/30 [00:19<00:04,  2.03it/s, Sum_GNN_time:=10.0081, Sum_Search_time:=3.6090, Avg_Gap_init:=14.6727, Avg_Gap_best:=9.2593, Avg_Cost_init:=1.8085, Avg_Cost_best:=1.7204, Avg_Otpimal_best:=1.5731, Avg_counts: =20.1905]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 70%|███████   | 21/30 [00:20<00:04,  2.03it/s, Sum_GNN_time:=10.0588, Sum_Search_time:=3.7745, Avg_Gap_init:=14.4004, Avg_Gap_best:=9.1285, Avg_Cost_init:=1.8116, Avg_Cost_best:=1.7257, Avg_Otpimal_best:=1.5801, Avg_counts: =19.8182] 73%|███████▎  | 22/30 [00:20<00:03,  2.07it/s, Sum_GNN_time:=10.0588, Sum_Search_time:=3.7745, Avg_Gap_init:=14.4004, Avg_Gap_best:=9.1285, Avg_Cost_init:=1.8116, Avg_Cost_best:=1.7257, Avg_Otpimal_best:=1.5801, Avg_counts: =19.8182]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 73%|███████▎  | 22/30 [00:20<00:03,  2.07it/s, Sum_GNN_time:=10.1093, Sum_Search_time:=3.9488, Avg_Gap_init:=14.0524, Avg_Gap_best:=8.9447, Avg_Cost_init:=1.8046, Avg_Cost_best:=1.7213, Avg_Otpimal_best:=1.5788, Avg_counts: =19.8261] 77%|███████▋  | 23/30 [00:20<00:03,  2.09it/s, Sum_GNN_time:=10.1093, Sum_Search_time:=3.9488, Avg_Gap_init:=14.0524, Avg_Gap_best:=8.9447, Avg_Cost_init:=1.8046, Avg_Cost_best:=1.7213, Avg_Otpimal_best:=1.5788, Avg_counts: =19.8261]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 77%|███████▋  | 23/30 [00:21<00:03,  2.09it/s, Sum_GNN_time:=10.1598, Sum_Search_time:=4.1224, Avg_Gap_init:=14.2330, Avg_Gap_best:=9.2624, Avg_Cost_init:=1.8045, Avg_Cost_best:=1.7236, Avg_Otpimal_best:=1.5765, Avg_counts: =19.7500] 80%|████████  | 24/30 [00:21<00:03,  2.00it/s, Sum_GNN_time:=10.1598, Sum_Search_time:=4.1224, Avg_Gap_init:=14.2330, Avg_Gap_best:=9.2624, Avg_Cost_init:=1.8045, Avg_Cost_best:=1.7236, Avg_Otpimal_best:=1.5765, Avg_counts: =19.7500]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 80%|████████  | 24/30 [00:21<00:03,  2.00it/s, Sum_GNN_time:=10.2108, Sum_Search_time:=4.2835, Avg_Gap_init:=14.3476, Avg_Gap_best:=9.1447, Avg_Cost_init:=1.7993, Avg_Cost_best:=1.7155, Avg_Otpimal_best:=1.5706, Avg_counts: =19.9200] 83%|████████▎ | 25/30 [00:21<00:02,  2.01it/s, Sum_GNN_time:=10.2108, Sum_Search_time:=4.2835, Avg_Gap_init:=14.3476, Avg_Gap_best:=9.1447, Avg_Cost_init:=1.7993, Avg_Cost_best:=1.7155, Avg_Otpimal_best:=1.5706, Avg_counts: =19.9200]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 83%|████████▎ | 25/30 [00:22<00:02,  2.01it/s, Sum_GNN_time:=10.2608, Sum_Search_time:=4.4582, Avg_Gap_init:=14.2491, Avg_Gap_best:=9.0969, Avg_Cost_init:=1.7932, Avg_Cost_best:=1.7104, Avg_Otpimal_best:=1.5667, Avg_counts: =19.9231] 87%|████████▋ | 26/30 [00:22<00:01,  2.05it/s, Sum_GNN_time:=10.2608, Sum_Search_time:=4.4582, Avg_Gap_init:=14.2491, Avg_Gap_best:=9.0969, Avg_Cost_init:=1.7932, Avg_Cost_best:=1.7104, Avg_Otpimal_best:=1.5667, Avg_counts: =19.9231]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 87%|████████▋ | 26/30 [00:22<00:01,  2.05it/s, Sum_GNN_time:=10.3111, Sum_Search_time:=4.6342, Avg_Gap_init:=14.0303, Avg_Gap_best:=9.0079, Avg_Cost_init:=1.7847, Avg_Cost_best:=1.7041, Avg_Otpimal_best:=1.5621, Avg_counts: =19.8519] 90%|█████████ | 27/30 [00:22<00:01,  2.04it/s, Sum_GNN_time:=10.3111, Sum_Search_time:=4.6342, Avg_Gap_init:=14.0303, Avg_Gap_best:=9.0079, Avg_Cost_init:=1.7847, Avg_Cost_best:=1.7041, Avg_Otpimal_best:=1.5621, Avg_counts: =19.8519]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 90%|█████████ | 27/30 [00:23<00:01,  2.04it/s, Sum_GNN_time:=10.3615, Sum_Search_time:=4.7973, Avg_Gap_init:=13.8606, Avg_Gap_best:=8.8895, Avg_Cost_init:=1.7803, Avg_Cost_best:=1.7006, Avg_Otpimal_best:=1.5606, Avg_counts: =19.9286] 93%|█████████▎| 28/30 [00:23<00:00,  2.07it/s, Sum_GNN_time:=10.3615, Sum_Search_time:=4.7973, Avg_Gap_init:=13.8606, Avg_Gap_best:=8.8895, Avg_Cost_init:=1.7803, Avg_Cost_best:=1.7006, Avg_Otpimal_best:=1.5606, Avg_counts: =19.9286]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 93%|█████████▎| 28/30 [00:23<00:00,  2.07it/s, Sum_GNN_time:=10.4121, Sum_Search_time:=4.9806, Avg_Gap_init:=14.2381, Avg_Gap_best:=9.1151, Avg_Cost_init:=1.7897, Avg_Cost_best:=1.7074, Avg_Otpimal_best:=1.5635, Avg_counts: =20.2069] 97%|█████████▋| 29/30 [00:23<00:00,  1.97it/s, Sum_GNN_time:=10.4121, Sum_Search_time:=4.9806, Avg_Gap_init:=14.2381, Avg_Gap_best:=9.1151, Avg_Cost_init:=1.7897, Avg_Cost_best:=1.7074, Avg_Otpimal_best:=1.5635, Avg_counts: =20.2069]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 97%|█████████▋| 29/30 [00:24<00:00,  1.97it/s, Sum_GNN_time:=10.4626, Sum_Search_time:=5.1605, Avg_Gap_init:=14.0591, Avg_Gap_best:=9.0468, Avg_Cost_init:=1.7844, Avg_Cost_best:=1.7040, Avg_Otpimal_best:=1.5613, Avg_counts: =20.1333]100%|██████████| 30/30 [00:24<00:00,  1.98it/s, Sum_GNN_time:=10.4626, Sum_Search_time:=5.1605, Avg_Gap_init:=14.0591, Avg_Gap_best:=9.0468, Avg_Cost_init:=1.7844, Avg_Cost_best:=1.7040, Avg_Otpimal_best:=1.5613, Avg_counts: =20.1333]100%|██████████| 30/30 [00:24<00:00,  1.24it/s, Sum_GNN_time:=10.4626, Sum_Search_time:=5.1605, Avg_Gap_init:=14.0591, Avg_Gap_best:=9.0468, Avg_Cost_init:=1.7844, Avg_Cost_best:=1.7040, Avg_Otpimal_best:=1.5613, Avg_counts: =20.1333]
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Total time for model prediction: 10.4626 seconds
Total time for guided local search: 5.1605 seconds
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=150, data_path='../tsp_input/generated_insatnces_30_size_150', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP150 for 100 and tested in ATSP150 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:00<?, ?it/s, Sum_GNN_time:=0.1509, Sum_Search_time:=0.1937, Avg_Gap_init:=18.2868, Avg_Gap_best:=14.6975, Avg_Cost_init:=1.8855, Avg_Cost_best:=1.8283, Avg_Otpimal_best:=1.5940, Avg_counts: =12.0000]  3%|▎         | 1/30 [00:00<00:27,  1.07it/s, Sum_GNN_time:=0.1509, Sum_Search_time:=0.1937, Avg_Gap_init:=18.2868, Avg_Gap_best:=14.6975, Avg_Cost_init:=1.8855, Avg_Cost_best:=1.8283, Avg_Otpimal_best:=1.5940, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  3%|▎         | 1/30 [00:01<00:27,  1.07it/s, Sum_GNN_time:=0.2800, Sum_Search_time:=0.3848, Avg_Gap_init:=14.1236, Avg_Gap_best:=11.0793, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7401, Avg_Otpimal_best:=1.5656, Avg_counts: =12.0000]  7%|▋         | 2/30 [00:01<00:26,  1.06it/s, Sum_GNN_time:=0.2800, Sum_Search_time:=0.3848, Avg_Gap_init:=14.1236, Avg_Gap_best:=11.0793, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7401, Avg_Otpimal_best:=1.5656, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  7%|▋         | 2/30 [00:02<00:26,  1.06it/s, Sum_GNN_time:=0.4079, Sum_Search_time:=0.5760, Avg_Gap_init:=14.4492, Avg_Gap_best:=11.0396, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7346, Avg_Otpimal_best:=1.5615, Avg_counts: =12.0000] 10%|█         | 3/30 [00:02<00:24,  1.10it/s, Sum_GNN_time:=0.4079, Sum_Search_time:=0.5760, Avg_Gap_init:=14.4492, Avg_Gap_best:=11.0396, Avg_Cost_init:=1.7879, Avg_Cost_best:=1.7346, Avg_Otpimal_best:=1.5615, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 10%|█         | 3/30 [00:03<00:24,  1.10it/s, Sum_GNN_time:=0.5378, Sum_Search_time:=0.7674, Avg_Gap_init:=15.4458, Avg_Gap_best:=11.8371, Avg_Cost_init:=1.7740, Avg_Cost_best:=1.7186, Avg_Otpimal_best:=1.5368, Avg_counts: =12.0000] 13%|█▎        | 4/30 [00:03<00:24,  1.08it/s, Sum_GNN_time:=0.5378, Sum_Search_time:=0.7674, Avg_Gap_init:=15.4458, Avg_Gap_best:=11.8371, Avg_Cost_init:=1.7740, Avg_Cost_best:=1.7186, Avg_Otpimal_best:=1.5368, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 13%|█▎        | 4/30 [00:04<00:24,  1.08it/s, Sum_GNN_time:=0.6665, Sum_Search_time:=0.9585, Avg_Gap_init:=16.6462, Avg_Gap_best:=12.6665, Avg_Cost_init:=1.8075, Avg_Cost_best:=1.7457, Avg_Otpimal_best:=1.5491, Avg_counts: =12.0000] 17%|█▋        | 5/30 [00:04<00:22,  1.10it/s, Sum_GNN_time:=0.6665, Sum_Search_time:=0.9585, Avg_Gap_init:=16.6462, Avg_Gap_best:=12.6665, Avg_Cost_init:=1.8075, Avg_Cost_best:=1.7457, Avg_Otpimal_best:=1.5491, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 17%|█▋        | 5/30 [00:05<00:22,  1.10it/s, Sum_GNN_time:=0.7991, Sum_Search_time:=1.1474, Avg_Gap_init:=16.6094, Avg_Gap_best:=12.6474, Avg_Cost_init:=1.8446, Avg_Cost_best:=1.7819, Avg_Otpimal_best:=1.5816, Avg_counts: =12.0000] 20%|██        | 6/30 [00:05<00:22,  1.04it/s, Sum_GNN_time:=0.7991, Sum_Search_time:=1.1474, Avg_Gap_init:=16.6094, Avg_Gap_best:=12.6474, Avg_Cost_init:=1.8446, Avg_Cost_best:=1.7819, Avg_Otpimal_best:=1.5816, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 20%|██        | 6/30 [00:06<00:22,  1.04it/s, Sum_GNN_time:=0.9275, Sum_Search_time:=1.3371, Avg_Gap_init:=15.7976, Avg_Gap_best:=12.1316, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7857, Avg_Otpimal_best:=1.5926, Avg_counts: =12.0000] 23%|██▎       | 7/30 [00:06<00:21,  1.08it/s, Sum_GNN_time:=0.9275, Sum_Search_time:=1.3371, Avg_Gap_init:=15.7976, Avg_Gap_best:=12.1316, Avg_Cost_init:=1.8439, Avg_Cost_best:=1.7857, Avg_Otpimal_best:=1.5926, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 23%|██▎       | 7/30 [00:07<00:21,  1.08it/s, Sum_GNN_time:=1.0562, Sum_Search_time:=1.5264, Avg_Gap_init:=16.6077, Avg_Gap_best:=12.8521, Avg_Cost_init:=1.8652, Avg_Cost_best:=1.8052, Avg_Otpimal_best:=1.5994, Avg_counts: =12.0000] 27%|██▋       | 8/30 [00:07<00:20,  1.06it/s, Sum_GNN_time:=1.0562, Sum_Search_time:=1.5264, Avg_Gap_init:=16.6077, Avg_Gap_best:=12.8521, Avg_Cost_init:=1.8652, Avg_Cost_best:=1.8052, Avg_Otpimal_best:=1.5994, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 27%|██▋       | 8/30 [00:08<00:20,  1.06it/s, Sum_GNN_time:=1.1862, Sum_Search_time:=1.7183, Avg_Gap_init:=16.1744, Avg_Gap_best:=12.6669, Avg_Cost_init:=1.8443, Avg_Cost_best:=1.7885, Avg_Otpimal_best:=1.5871, Avg_counts: =12.0000] 30%|███       | 9/30 [00:08<00:19,  1.09it/s, Sum_GNN_time:=1.1862, Sum_Search_time:=1.7183, Avg_Gap_init:=16.1744, Avg_Gap_best:=12.6669, Avg_Cost_init:=1.8443, Avg_Cost_best:=1.7885, Avg_Otpimal_best:=1.5871, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 30%|███       | 9/30 [00:09<00:19,  1.09it/s, Sum_GNN_time:=1.3157, Sum_Search_time:=1.9088, Avg_Gap_init:=16.2496, Avg_Gap_best:=12.7079, Avg_Cost_init:=1.8458, Avg_Cost_best:=1.7894, Avg_Otpimal_best:=1.5873, Avg_counts: =12.0000] 33%|███▎      | 10/30 [00:09<00:18,  1.06it/s, Sum_GNN_time:=1.3157, Sum_Search_time:=1.9088, Avg_Gap_init:=16.2496, Avg_Gap_best:=12.7079, Avg_Cost_init:=1.8458, Avg_Cost_best:=1.7894, Avg_Otpimal_best:=1.5873, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 33%|███▎      | 10/30 [00:10<00:18,  1.06it/s, Sum_GNN_time:=1.4532, Sum_Search_time:=2.1232, Avg_Gap_init:=16.4450, Avg_Gap_best:=12.7881, Avg_Cost_init:=1.8411, Avg_Cost_best:=1.7832, Avg_Otpimal_best:=1.5808, Avg_counts: =12.0000] 37%|███▋      | 11/30 [00:10<00:17,  1.06it/s, Sum_GNN_time:=1.4532, Sum_Search_time:=2.1232, Avg_Gap_init:=16.4450, Avg_Gap_best:=12.7881, Avg_Cost_init:=1.8411, Avg_Cost_best:=1.7832, Avg_Otpimal_best:=1.5808, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 37%|███▋      | 11/30 [00:11<00:17,  1.06it/s, Sum_GNN_time:=1.5824, Sum_Search_time:=2.3118, Avg_Gap_init:=16.6097, Avg_Gap_best:=13.0277, Avg_Cost_init:=1.8414, Avg_Cost_best:=1.7848, Avg_Otpimal_best:=1.5789, Avg_counts: =12.0000] 40%|████      | 12/30 [00:11<00:16,  1.08it/s, Sum_GNN_time:=1.5824, Sum_Search_time:=2.3118, Avg_Gap_init:=16.6097, Avg_Gap_best:=13.0277, Avg_Cost_init:=1.8414, Avg_Cost_best:=1.7848, Avg_Otpimal_best:=1.5789, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 40%|████      | 12/30 [00:12<00:16,  1.08it/s, Sum_GNN_time:=1.7132, Sum_Search_time:=2.5037, Avg_Gap_init:=16.6009, Avg_Gap_best:=12.9739, Avg_Cost_init:=1.8426, Avg_Cost_best:=1.7852, Avg_Otpimal_best:=1.5800, Avg_counts: =12.0000] 43%|████▎     | 13/30 [00:12<00:15,  1.06it/s, Sum_GNN_time:=1.7132, Sum_Search_time:=2.5037, Avg_Gap_init:=16.6009, Avg_Gap_best:=12.9739, Avg_Cost_init:=1.8426, Avg_Cost_best:=1.7852, Avg_Otpimal_best:=1.5800, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 43%|████▎     | 13/30 [00:13<00:15,  1.06it/s, Sum_GNN_time:=1.8436, Sum_Search_time:=2.6937, Avg_Gap_init:=16.5541, Avg_Gap_best:=12.9117, Avg_Cost_init:=1.8468, Avg_Cost_best:=1.7890, Avg_Otpimal_best:=1.5843, Avg_counts: =12.0000] 47%|████▋     | 14/30 [00:13<00:14,  1.08it/s, Sum_GNN_time:=1.8436, Sum_Search_time:=2.6937, Avg_Gap_init:=16.5541, Avg_Gap_best:=12.9117, Avg_Cost_init:=1.8468, Avg_Cost_best:=1.7890, Avg_Otpimal_best:=1.5843, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 47%|████▋     | 14/30 [00:14<00:14,  1.08it/s, Sum_GNN_time:=1.9731, Sum_Search_time:=2.8883, Avg_Gap_init:=16.7409, Avg_Gap_best:=13.0147, Avg_Cost_init:=1.8472, Avg_Cost_best:=1.7882, Avg_Otpimal_best:=1.5822, Avg_counts: =12.0000] 50%|█████     | 15/30 [00:14<00:14,  1.07it/s, Sum_GNN_time:=1.9731, Sum_Search_time:=2.8883, Avg_Gap_init:=16.7409, Avg_Gap_best:=13.0147, Avg_Cost_init:=1.8472, Avg_Cost_best:=1.7882, Avg_Otpimal_best:=1.5822, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 50%|█████     | 15/30 [00:14<00:14,  1.07it/s, Sum_GNN_time:=2.1029, Sum_Search_time:=3.0928, Avg_Gap_init:=16.8606, Avg_Gap_best:=13.1832, Avg_Cost_init:=1.8568, Avg_Cost_best:=1.7984, Avg_Otpimal_best:=1.5887, Avg_counts: =12.0000] 53%|█████▎    | 16/30 [00:14<00:12,  1.08it/s, Sum_GNN_time:=2.1029, Sum_Search_time:=3.0928, Avg_Gap_init:=16.8606, Avg_Gap_best:=13.1832, Avg_Cost_init:=1.8568, Avg_Cost_best:=1.7984, Avg_Otpimal_best:=1.5887, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 53%|█████▎    | 16/30 [00:15<00:12,  1.08it/s, Sum_GNN_time:=2.2312, Sum_Search_time:=3.2821, Avg_Gap_init:=16.6790, Avg_Gap_best:=12.9871, Avg_Cost_init:=1.8496, Avg_Cost_best:=1.7911, Avg_Otpimal_best:=1.5849, Avg_counts: =12.0000] 57%|█████▋    | 17/30 [00:15<00:11,  1.10it/s, Sum_GNN_time:=2.2312, Sum_Search_time:=3.2821, Avg_Gap_init:=16.6790, Avg_Gap_best:=12.9871, Avg_Cost_init:=1.8496, Avg_Cost_best:=1.7911, Avg_Otpimal_best:=1.5849, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 57%|█████▋    | 17/30 [00:16<00:11,  1.10it/s, Sum_GNN_time:=2.3605, Sum_Search_time:=3.4730, Avg_Gap_init:=16.4954, Avg_Gap_best:=12.8129, Avg_Cost_init:=1.8430, Avg_Cost_best:=1.7848, Avg_Otpimal_best:=1.5817, Avg_counts: =12.0000] 60%|██████    | 18/30 [00:16<00:11,  1.08it/s, Sum_GNN_time:=2.3605, Sum_Search_time:=3.4730, Avg_Gap_init:=16.4954, Avg_Gap_best:=12.8129, Avg_Cost_init:=1.8430, Avg_Cost_best:=1.7848, Avg_Otpimal_best:=1.5817, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 60%|██████    | 18/30 [00:17<00:11,  1.08it/s, Sum_GNN_time:=2.4917, Sum_Search_time:=3.6630, Avg_Gap_init:=16.7161, Avg_Gap_best:=12.9305, Avg_Cost_init:=1.8547, Avg_Cost_best:=1.7944, Avg_Otpimal_best:=1.5885, Avg_counts: =12.0000] 63%|██████▎   | 19/30 [00:17<00:09,  1.10it/s, Sum_GNN_time:=2.4917, Sum_Search_time:=3.6630, Avg_Gap_init:=16.7161, Avg_Gap_best:=12.9305, Avg_Cost_init:=1.8547, Avg_Cost_best:=1.7944, Avg_Otpimal_best:=1.5885, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 63%|██████▎   | 19/30 [00:18<00:09,  1.10it/s, Sum_GNN_time:=2.6212, Sum_Search_time:=3.8543, Avg_Gap_init:=16.7120, Avg_Gap_best:=12.9306, Avg_Cost_init:=1.8540, Avg_Cost_best:=1.7939, Avg_Otpimal_best:=1.5880, Avg_counts: =12.0000] 67%|██████▋   | 20/30 [00:18<00:09,  1.08it/s, Sum_GNN_time:=2.6212, Sum_Search_time:=3.8543, Avg_Gap_init:=16.7120, Avg_Gap_best:=12.9306, Avg_Cost_init:=1.8540, Avg_Cost_best:=1.7939, Avg_Otpimal_best:=1.5880, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 67%|██████▋   | 20/30 [00:19<00:09,  1.08it/s, Sum_GNN_time:=2.7511, Sum_Search_time:=4.0457, Avg_Gap_init:=16.7080, Avg_Gap_best:=12.9962, Avg_Cost_init:=1.8519, Avg_Cost_best:=1.7929, Avg_Otpimal_best:=1.5862, Avg_counts: =12.0000] 70%|███████   | 21/30 [00:19<00:08,  1.10it/s, Sum_GNN_time:=2.7511, Sum_Search_time:=4.0457, Avg_Gap_init:=16.7080, Avg_Gap_best:=12.9962, Avg_Cost_init:=1.8519, Avg_Cost_best:=1.7929, Avg_Otpimal_best:=1.5862, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 70%|███████   | 21/30 [00:20<00:08,  1.10it/s, Sum_GNN_time:=2.8885, Sum_Search_time:=4.2476, Avg_Gap_init:=17.0691, Avg_Gap_best:=13.2851, Avg_Cost_init:=1.8558, Avg_Cost_best:=1.7957, Avg_Otpimal_best:=1.5848, Avg_counts: =12.0000] 73%|███████▎  | 22/30 [00:20<00:07,  1.07it/s, Sum_GNN_time:=2.8885, Sum_Search_time:=4.2476, Avg_Gap_init:=17.0691, Avg_Gap_best:=13.2851, Avg_Cost_init:=1.8558, Avg_Cost_best:=1.7957, Avg_Otpimal_best:=1.5848, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 73%|███████▎  | 22/30 [00:21<00:07,  1.07it/s, Sum_GNN_time:=3.0188, Sum_Search_time:=4.4414, Avg_Gap_init:=17.1773, Avg_Gap_best:=13.3595, Avg_Cost_init:=1.8639, Avg_Cost_best:=1.8030, Avg_Otpimal_best:=1.5902, Avg_counts: =12.0000] 77%|███████▋  | 23/30 [00:21<00:06,  1.09it/s, Sum_GNN_time:=3.0188, Sum_Search_time:=4.4414, Avg_Gap_init:=17.1773, Avg_Gap_best:=13.3595, Avg_Cost_init:=1.8639, Avg_Cost_best:=1.8030, Avg_Otpimal_best:=1.5902, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 77%|███████▋  | 23/30 [00:22<00:06,  1.09it/s, Sum_GNN_time:=3.1485, Sum_Search_time:=4.6325, Avg_Gap_init:=17.3606, Avg_Gap_best:=13.4880, Avg_Cost_init:=1.8729, Avg_Cost_best:=1.8109, Avg_Otpimal_best:=1.5952, Avg_counts: =12.0000] 80%|████████  | 24/30 [00:22<00:05,  1.11it/s, Sum_GNN_time:=3.1485, Sum_Search_time:=4.6325, Avg_Gap_init:=17.3606, Avg_Gap_best:=13.4880, Avg_Cost_init:=1.8729, Avg_Cost_best:=1.8109, Avg_Otpimal_best:=1.5952, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 80%|████████  | 24/30 [00:23<00:05,  1.11it/s, Sum_GNN_time:=3.2781, Sum_Search_time:=4.8236, Avg_Gap_init:=17.2318, Avg_Gap_best:=13.3557, Avg_Cost_init:=1.8752, Avg_Cost_best:=1.8130, Avg_Otpimal_best:=1.5991, Avg_counts: =12.0000] 83%|████████▎ | 25/30 [00:23<00:04,  1.09it/s, Sum_GNN_time:=3.2781, Sum_Search_time:=4.8236, Avg_Gap_init:=17.2318, Avg_Gap_best:=13.3557, Avg_Cost_init:=1.8752, Avg_Cost_best:=1.8130, Avg_Otpimal_best:=1.5991, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 83%|████████▎ | 25/30 [00:24<00:04,  1.09it/s, Sum_GNN_time:=3.4079, Sum_Search_time:=5.0158, Avg_Gap_init:=17.2546, Avg_Gap_best:=13.3536, Avg_Cost_init:=1.8756, Avg_Cost_best:=1.8131, Avg_Otpimal_best:=1.5991, Avg_counts: =12.0000] 87%|████████▋ | 26/30 [00:24<00:03,  1.10it/s, Sum_GNN_time:=3.4079, Sum_Search_time:=5.0158, Avg_Gap_init:=17.2546, Avg_Gap_best:=13.3536, Avg_Cost_init:=1.8756, Avg_Cost_best:=1.8131, Avg_Otpimal_best:=1.5991, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 87%|████████▋ | 26/30 [00:25<00:03,  1.10it/s, Sum_GNN_time:=3.5450, Sum_Search_time:=5.2303, Avg_Gap_init:=17.3137, Avg_Gap_best:=13.4255, Avg_Cost_init:=1.8759, Avg_Cost_best:=1.8136, Avg_Otpimal_best:=1.5986, Avg_counts: =12.0000] 90%|█████████ | 27/30 [00:25<00:02,  1.06it/s, Sum_GNN_time:=3.5450, Sum_Search_time:=5.2303, Avg_Gap_init:=17.3137, Avg_Gap_best:=13.4255, Avg_Cost_init:=1.8759, Avg_Cost_best:=1.8136, Avg_Otpimal_best:=1.5986, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 90%|█████████ | 27/30 [00:25<00:02,  1.06it/s, Sum_GNN_time:=3.6749, Sum_Search_time:=5.4245, Avg_Gap_init:=17.4822, Avg_Gap_best:=13.6501, Avg_Cost_init:=1.8796, Avg_Cost_best:=1.8182, Avg_Otpimal_best:=1.5994, Avg_counts: =12.0000] 93%|█████████▎| 28/30 [00:25<00:01,  1.09it/s, Sum_GNN_time:=3.6749, Sum_Search_time:=5.4245, Avg_Gap_init:=17.4822, Avg_Gap_best:=13.6501, Avg_Cost_init:=1.8796, Avg_Cost_best:=1.8182, Avg_Otpimal_best:=1.5994, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 93%|█████████▎| 28/30 [00:26<00:01,  1.09it/s, Sum_GNN_time:=3.8046, Sum_Search_time:=5.6151, Avg_Gap_init:=17.5083, Avg_Gap_best:=13.6293, Avg_Cost_init:=1.8845, Avg_Cost_best:=1.8221, Avg_Otpimal_best:=1.6032, Avg_counts: =12.0000] 97%|█████████▋| 29/30 [00:26<00:00,  1.11it/s, Sum_GNN_time:=3.8046, Sum_Search_time:=5.6151, Avg_Gap_init:=17.5083, Avg_Gap_best:=13.6293, Avg_Cost_init:=1.8845, Avg_Cost_best:=1.8221, Avg_Otpimal_best:=1.6032, Avg_counts: =12.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 97%|█████████▋| 29/30 [00:27<00:00,  1.11it/s, Sum_GNN_time:=3.9340, Sum_Search_time:=5.8064, Avg_Gap_init:=17.3531, Avg_Gap_best:=13.4725, Avg_Cost_init:=1.8822, Avg_Cost_best:=1.8198, Avg_Otpimal_best:=1.6034, Avg_counts: =12.0000]100%|██████████| 30/30 [00:27<00:00,  1.04it/s, Sum_GNN_time:=3.9340, Sum_Search_time:=5.8064, Avg_Gap_init:=17.3531, Avg_Gap_best:=13.4725, Avg_Cost_init:=1.8822, Avg_Cost_best:=1.8198, Avg_Otpimal_best:=1.6034, Avg_counts: =12.0000]100%|██████████| 30/30 [00:27<00:00,  1.08it/s, Sum_GNN_time:=3.9340, Sum_Search_time:=5.8064, Avg_Gap_init:=17.3531, Avg_Gap_best:=13.4725, Avg_Cost_init:=1.8822, Avg_Cost_best:=1.8198, Avg_Otpimal_best:=1.6034, Avg_counts: =12.0000]
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Total time for model prediction: 3.9340 seconds
Total time for guided local search: 5.8064 seconds
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=250, data_path='../tsp_input/generated_insatnces_30_size_250', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP250 for 100 and tested in ATSP250 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:02<?, ?it/s, Sum_GNN_time:=0.4904, Sum_Search_time:=0.2373, Avg_Gap_init:=19.8524, Avg_Gap_best:=17.5708, Avg_Cost_init:=1.8529, Avg_Cost_best:=1.8176, Avg_Otpimal_best:=1.5460, Avg_counts: =4.0000]  3%|▎         | 1/30 [00:02<01:09,  2.41s/it, Sum_GNN_time:=0.4904, Sum_Search_time:=0.2373, Avg_Gap_init:=19.8524, Avg_Gap_best:=17.5708, Avg_Cost_init:=1.8529, Avg_Cost_best:=1.8176, Avg_Otpimal_best:=1.5460, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  3%|▎         | 1/30 [00:04<01:09,  2.41s/it, Sum_GNN_time:=0.9609, Sum_Search_time:=0.4495, Avg_Gap_init:=19.0345, Avg_Gap_best:=17.1129, Avg_Cost_init:=1.8243, Avg_Cost_best:=1.7948, Avg_Otpimal_best:=1.5325, Avg_counts: =4.0000]  7%|▋         | 2/30 [00:04<01:06,  2.37s/it, Sum_GNN_time:=0.9609, Sum_Search_time:=0.4495, Avg_Gap_init:=19.0345, Avg_Gap_best:=17.1129, Avg_Cost_init:=1.8243, Avg_Cost_best:=1.7948, Avg_Otpimal_best:=1.5325, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  7%|▋         | 2/30 [00:07<01:06,  2.37s/it, Sum_GNN_time:=1.4566, Sum_Search_time:=0.6885, Avg_Gap_init:=19.2412, Avg_Gap_best:=17.5953, Avg_Cost_init:=1.8883, Avg_Cost_best:=1.8624, Avg_Otpimal_best:=1.5833, Avg_counts: =4.0000] 10%|█         | 3/30 [00:07<01:07,  2.50s/it, Sum_GNN_time:=1.4566, Sum_Search_time:=0.6885, Avg_Gap_init:=19.2412, Avg_Gap_best:=17.5953, Avg_Cost_init:=1.8883, Avg_Cost_best:=1.8624, Avg_Otpimal_best:=1.5833, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 10%|█         | 3/30 [00:09<01:07,  2.50s/it, Sum_GNN_time:=1.9326, Sum_Search_time:=0.9003, Avg_Gap_init:=17.5118, Avg_Gap_best:=16.0977, Avg_Cost_init:=1.8718, Avg_Cost_best:=1.8495, Avg_Otpimal_best:=1.5931, Avg_counts: =4.0000] 13%|█▎        | 4/30 [00:09<01:03,  2.45s/it, Sum_GNN_time:=1.9326, Sum_Search_time:=0.9003, Avg_Gap_init:=17.5118, Avg_Gap_best:=16.0977, Avg_Cost_init:=1.8718, Avg_Cost_best:=1.8495, Avg_Otpimal_best:=1.5931, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 13%|█▎        | 4/30 [00:12<01:03,  2.45s/it, Sum_GNN_time:=2.4043, Sum_Search_time:=1.1366, Avg_Gap_init:=17.2257, Avg_Gap_best:=15.7407, Avg_Cost_init:=1.8577, Avg_Cost_best:=1.8344, Avg_Otpimal_best:=1.5848, Avg_counts: =4.0000] 17%|█▋        | 5/30 [00:12<01:00,  2.44s/it, Sum_GNN_time:=2.4043, Sum_Search_time:=1.1366, Avg_Gap_init:=17.2257, Avg_Gap_best:=15.7407, Avg_Cost_init:=1.8577, Avg_Cost_best:=1.8344, Avg_Otpimal_best:=1.5848, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 17%|█▋        | 5/30 [00:14<01:00,  2.44s/it, Sum_GNN_time:=2.8822, Sum_Search_time:=1.3495, Avg_Gap_init:=17.1418, Avg_Gap_best:=15.6933, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8238, Avg_Otpimal_best:=1.5763, Avg_counts: =4.0000] 20%|██        | 6/30 [00:14<00:57,  2.42s/it, Sum_GNN_time:=2.8822, Sum_Search_time:=1.3495, Avg_Gap_init:=17.1418, Avg_Gap_best:=15.6933, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8238, Avg_Otpimal_best:=1.5763, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 20%|██        | 6/30 [00:17<00:57,  2.42s/it, Sum_GNN_time:=3.3616, Sum_Search_time:=1.5678, Avg_Gap_init:=17.3511, Avg_Gap_best:=15.9438, Avg_Cost_init:=1.8611, Avg_Cost_best:=1.8390, Avg_Otpimal_best:=1.5859, Avg_counts: =4.0000] 23%|██▎       | 7/30 [00:17<00:56,  2.44s/it, Sum_GNN_time:=3.3616, Sum_Search_time:=1.5678, Avg_Gap_init:=17.3511, Avg_Gap_best:=15.9438, Avg_Cost_init:=1.8611, Avg_Cost_best:=1.8390, Avg_Otpimal_best:=1.5859, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 23%|██▎       | 7/30 [00:19<00:56,  2.44s/it, Sum_GNN_time:=3.8367, Sum_Search_time:=1.7785, Avg_Gap_init:=17.6595, Avg_Gap_best:=16.2796, Avg_Cost_init:=1.8641, Avg_Cost_best:=1.8424, Avg_Otpimal_best:=1.5843, Avg_counts: =4.0000] 27%|██▋       | 8/30 [00:19<00:53,  2.42s/it, Sum_GNN_time:=3.8367, Sum_Search_time:=1.7785, Avg_Gap_init:=17.6595, Avg_Gap_best:=16.2796, Avg_Cost_init:=1.8641, Avg_Cost_best:=1.8424, Avg_Otpimal_best:=1.5843, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 27%|██▋       | 8/30 [00:21<00:53,  2.42s/it, Sum_GNN_time:=4.3196, Sum_Search_time:=1.9935, Avg_Gap_init:=17.2375, Avg_Gap_best:=15.8108, Avg_Cost_init:=1.8435, Avg_Cost_best:=1.8213, Avg_Otpimal_best:=1.5721, Avg_counts: =4.0000] 30%|███       | 9/30 [00:21<00:50,  2.43s/it, Sum_GNN_time:=4.3196, Sum_Search_time:=1.9935, Avg_Gap_init:=17.2375, Avg_Gap_best:=15.8108, Avg_Cost_init:=1.8435, Avg_Cost_best:=1.8213, Avg_Otpimal_best:=1.5721, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 30%|███       | 9/30 [00:24<00:50,  2.43s/it, Sum_GNN_time:=4.8000, Sum_Search_time:=2.2062, Avg_Gap_init:=16.6412, Avg_Gap_best:=15.2559, Avg_Cost_init:=1.8382, Avg_Cost_best:=1.8165, Avg_Otpimal_best:=1.5758, Avg_counts: =4.0000] 33%|███▎      | 10/30 [00:24<00:48,  2.41s/it, Sum_GNN_time:=4.8000, Sum_Search_time:=2.2062, Avg_Gap_init:=16.6412, Avg_Gap_best:=15.2559, Avg_Cost_init:=1.8382, Avg_Cost_best:=1.8165, Avg_Otpimal_best:=1.5758, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 33%|███▎      | 10/30 [00:26<00:48,  2.41s/it, Sum_GNN_time:=5.2774, Sum_Search_time:=2.4193, Avg_Gap_init:=17.9788, Avg_Gap_best:=16.5989, Avg_Cost_init:=1.8710, Avg_Cost_best:=1.8493, Avg_Otpimal_best:=1.5847, Avg_counts: =4.0000] 37%|███▋      | 11/30 [00:26<00:45,  2.41s/it, Sum_GNN_time:=5.2774, Sum_Search_time:=2.4193, Avg_Gap_init:=17.9788, Avg_Gap_best:=16.5989, Avg_Cost_init:=1.8710, Avg_Cost_best:=1.8493, Avg_Otpimal_best:=1.5847, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 37%|███▋      | 11/30 [00:28<00:45,  2.41s/it, Sum_GNN_time:=5.7574, Sum_Search_time:=2.6336, Avg_Gap_init:=17.5687, Avg_Gap_best:=16.2500, Avg_Cost_init:=1.8566, Avg_Cost_best:=1.8359, Avg_Otpimal_best:=1.5779, Avg_counts: =4.0000] 40%|████      | 12/30 [00:28<00:42,  2.36s/it, Sum_GNN_time:=5.7574, Sum_Search_time:=2.6336, Avg_Gap_init:=17.5687, Avg_Gap_best:=16.2500, Avg_Cost_init:=1.8566, Avg_Cost_best:=1.8359, Avg_Otpimal_best:=1.5779, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 40%|████      | 12/30 [00:31<00:42,  2.36s/it, Sum_GNN_time:=6.2367, Sum_Search_time:=2.8471, Avg_Gap_init:=17.6024, Avg_Gap_best:=16.2904, Avg_Cost_init:=1.8614, Avg_Cost_best:=1.8408, Avg_Otpimal_best:=1.5816, Avg_counts: =4.0000] 43%|████▎     | 13/30 [00:31<00:40,  2.36s/it, Sum_GNN_time:=6.2367, Sum_Search_time:=2.8471, Avg_Gap_init:=17.6024, Avg_Gap_best:=16.2904, Avg_Cost_init:=1.8614, Avg_Cost_best:=1.8408, Avg_Otpimal_best:=1.5816, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 43%|████▎     | 13/30 [00:33<00:40,  2.36s/it, Sum_GNN_time:=6.7160, Sum_Search_time:=3.0618, Avg_Gap_init:=18.0634, Avg_Gap_best:=16.7384, Avg_Cost_init:=1.8797, Avg_Cost_best:=1.8587, Avg_Otpimal_best:=1.5905, Avg_counts: =4.0000] 47%|████▋     | 14/30 [00:33<00:38,  2.38s/it, Sum_GNN_time:=6.7160, Sum_Search_time:=3.0618, Avg_Gap_init:=18.0634, Avg_Gap_best:=16.7384, Avg_Cost_init:=1.8797, Avg_Cost_best:=1.8587, Avg_Otpimal_best:=1.5905, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 47%|████▋     | 14/30 [00:36<00:38,  2.38s/it, Sum_GNN_time:=7.1847, Sum_Search_time:=3.2760, Avg_Gap_init:=17.6286, Avg_Gap_best:=16.2803, Avg_Cost_init:=1.8557, Avg_Cost_best:=1.8345, Avg_Otpimal_best:=1.5753, Avg_counts: =4.0000] 50%|█████     | 15/30 [00:36<00:35,  2.37s/it, Sum_GNN_time:=7.1847, Sum_Search_time:=3.2760, Avg_Gap_init:=17.6286, Avg_Gap_best:=16.2803, Avg_Cost_init:=1.8557, Avg_Cost_best:=1.8345, Avg_Otpimal_best:=1.5753, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 50%|█████     | 15/30 [00:38<00:35,  2.37s/it, Sum_GNN_time:=7.6498, Sum_Search_time:=3.4879, Avg_Gap_init:=17.4955, Avg_Gap_best:=16.1562, Avg_Cost_init:=1.8396, Avg_Cost_best:=1.8188, Avg_Otpimal_best:=1.5633, Avg_counts: =4.0000] 53%|█████▎    | 16/30 [00:38<00:34,  2.44s/it, Sum_GNN_time:=7.6498, Sum_Search_time:=3.4879, Avg_Gap_init:=17.4955, Avg_Gap_best:=16.1562, Avg_Cost_init:=1.8396, Avg_Cost_best:=1.8188, Avg_Otpimal_best:=1.5633, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 53%|█████▎    | 16/30 [00:40<00:34,  2.44s/it, Sum_GNN_time:=8.1182, Sum_Search_time:=3.6996, Avg_Gap_init:=17.5554, Avg_Gap_best:=16.1828, Avg_Cost_init:=1.8463, Avg_Cost_best:=1.8248, Avg_Otpimal_best:=1.5683, Avg_counts: =4.0000] 57%|█████▋    | 17/30 [00:41<00:31,  2.41s/it, Sum_GNN_time:=8.1182, Sum_Search_time:=3.6996, Avg_Gap_init:=17.5554, Avg_Gap_best:=16.1828, Avg_Cost_init:=1.8463, Avg_Cost_best:=1.8248, Avg_Otpimal_best:=1.5683, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 57%|█████▋    | 17/30 [00:43<00:31,  2.41s/it, Sum_GNN_time:=8.5913, Sum_Search_time:=3.9116, Avg_Gap_init:=17.5410, Avg_Gap_best:=16.1644, Avg_Cost_init:=1.8455, Avg_Cost_best:=1.8240, Avg_Otpimal_best:=1.5680, Avg_counts: =4.0000] 60%|██████    | 18/30 [00:43<00:28,  2.42s/it, Sum_GNN_time:=8.5913, Sum_Search_time:=3.9116, Avg_Gap_init:=17.5410, Avg_Gap_best:=16.1644, Avg_Cost_init:=1.8455, Avg_Cost_best:=1.8240, Avg_Otpimal_best:=1.5680, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 60%|██████    | 18/30 [00:45<00:28,  2.42s/it, Sum_GNN_time:=9.0651, Sum_Search_time:=4.1254, Avg_Gap_init:=17.5673, Avg_Gap_best:=16.2370, Avg_Cost_init:=1.8500, Avg_Cost_best:=1.8292, Avg_Otpimal_best:=1.5715, Avg_counts: =4.0000] 63%|██████▎   | 19/30 [00:45<00:25,  2.35s/it, Sum_GNN_time:=9.0651, Sum_Search_time:=4.1254, Avg_Gap_init:=17.5673, Avg_Gap_best:=16.2370, Avg_Cost_init:=1.8500, Avg_Cost_best:=1.8292, Avg_Otpimal_best:=1.5715, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 63%|██████▎   | 19/30 [00:48<00:25,  2.35s/it, Sum_GNN_time:=9.5376, Sum_Search_time:=4.3415, Avg_Gap_init:=17.3628, Avg_Gap_best:=16.0538, Avg_Cost_init:=1.8440, Avg_Cost_best:=1.8235, Avg_Otpimal_best:=1.5692, Avg_counts: =4.0000] 67%|██████▋   | 20/30 [00:48<00:23,  2.37s/it, Sum_GNN_time:=9.5376, Sum_Search_time:=4.3415, Avg_Gap_init:=17.3628, Avg_Gap_best:=16.0538, Avg_Cost_init:=1.8440, Avg_Cost_best:=1.8235, Avg_Otpimal_best:=1.5692, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 67%|██████▋   | 20/30 [00:50<00:23,  2.37s/it, Sum_GNN_time:=10.0131, Sum_Search_time:=4.5560, Avg_Gap_init:=17.5321, Avg_Gap_best:=16.2200, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.8224, Avg_Otpimal_best:=1.5662, Avg_counts: =4.0000] 70%|███████   | 21/30 [00:50<00:21,  2.37s/it, Sum_GNN_time:=10.0131, Sum_Search_time:=4.5560, Avg_Gap_init:=17.5321, Avg_Gap_best:=16.2200, Avg_Cost_init:=1.8429, Avg_Cost_best:=1.8224, Avg_Otpimal_best:=1.5662, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 70%|███████   | 21/30 [00:52<00:21,  2.37s/it, Sum_GNN_time:=10.5005, Sum_Search_time:=4.7711, Avg_Gap_init:=17.5947, Avg_Gap_best:=16.3372, Avg_Cost_init:=1.8482, Avg_Cost_best:=1.8286, Avg_Otpimal_best:=1.5699, Avg_counts: =4.0000] 73%|███████▎  | 22/30 [00:52<00:18,  2.37s/it, Sum_GNN_time:=10.5005, Sum_Search_time:=4.7711, Avg_Gap_init:=17.5947, Avg_Gap_best:=16.3372, Avg_Cost_init:=1.8482, Avg_Cost_best:=1.8286, Avg_Otpimal_best:=1.5699, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 73%|███████▎  | 22/30 [00:55<00:18,  2.37s/it, Sum_GNN_time:=10.9734, Sum_Search_time:=4.9827, Avg_Gap_init:=17.5136, Avg_Gap_best:=16.2581, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8268, Avg_Otpimal_best:=1.5695, Avg_counts: =4.0000] 77%|███████▋  | 23/30 [00:55<00:16,  2.38s/it, Sum_GNN_time:=10.9734, Sum_Search_time:=4.9827, Avg_Gap_init:=17.5136, Avg_Gap_best:=16.2581, Avg_Cost_init:=1.8464, Avg_Cost_best:=1.8268, Avg_Otpimal_best:=1.5695, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 77%|███████▋  | 23/30 [00:57<00:16,  2.38s/it, Sum_GNN_time:=11.4611, Sum_Search_time:=5.2202, Avg_Gap_init:=17.3812, Avg_Gap_best:=16.1187, Avg_Cost_init:=1.8410, Avg_Cost_best:=1.8213, Avg_Otpimal_best:=1.5667, Avg_counts: =4.0000] 80%|████████  | 24/30 [00:57<00:14,  2.40s/it, Sum_GNN_time:=11.4611, Sum_Search_time:=5.2202, Avg_Gap_init:=17.3812, Avg_Gap_best:=16.1187, Avg_Cost_init:=1.8410, Avg_Cost_best:=1.8213, Avg_Otpimal_best:=1.5667, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 80%|████████  | 24/30 [00:59<00:14,  2.40s/it, Sum_GNN_time:=11.9256, Sum_Search_time:=5.4327, Avg_Gap_init:=17.2540, Avg_Gap_best:=15.9988, Avg_Cost_init:=1.8394, Avg_Cost_best:=1.8198, Avg_Otpimal_best:=1.5671, Avg_counts: =4.0000] 83%|████████▎ | 25/30 [00:59<00:11,  2.39s/it, Sum_GNN_time:=11.9256, Sum_Search_time:=5.4327, Avg_Gap_init:=17.2540, Avg_Gap_best:=15.9988, Avg_Cost_init:=1.8394, Avg_Cost_best:=1.8198, Avg_Otpimal_best:=1.5671, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 83%|████████▎ | 25/30 [01:02<00:11,  2.39s/it, Sum_GNN_time:=12.4007, Sum_Search_time:=5.6747, Avg_Gap_init:=17.3943, Avg_Gap_best:=16.1290, Avg_Cost_init:=1.8413, Avg_Cost_best:=1.8216, Avg_Otpimal_best:=1.5669, Avg_counts: =4.0000] 87%|████████▋ | 26/30 [01:02<00:09,  2.35s/it, Sum_GNN_time:=12.4007, Sum_Search_time:=5.6747, Avg_Gap_init:=17.3943, Avg_Gap_best:=16.1290, Avg_Cost_init:=1.8413, Avg_Cost_best:=1.8216, Avg_Otpimal_best:=1.5669, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 87%|████████▋ | 26/30 [01:04<00:09,  2.35s/it, Sum_GNN_time:=12.8663, Sum_Search_time:=5.8877, Avg_Gap_init:=17.4107, Avg_Gap_best:=16.1239, Avg_Cost_init:=1.8404, Avg_Cost_best:=1.8203, Avg_Otpimal_best:=1.5660, Avg_counts: =4.0000] 90%|█████████ | 27/30 [01:04<00:07,  2.35s/it, Sum_GNN_time:=12.8663, Sum_Search_time:=5.8877, Avg_Gap_init:=17.4107, Avg_Gap_best:=16.1239, Avg_Cost_init:=1.8404, Avg_Cost_best:=1.8203, Avg_Otpimal_best:=1.5660, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 90%|█████████ | 27/30 [01:07<00:07,  2.35s/it, Sum_GNN_time:=13.3404, Sum_Search_time:=6.1053, Avg_Gap_init:=17.2000, Avg_Gap_best:=15.9467, Avg_Cost_init:=1.8364, Avg_Cost_best:=1.8169, Avg_Otpimal_best:=1.5654, Avg_counts: =4.0000] 93%|█████████▎| 28/30 [01:07<00:04,  2.37s/it, Sum_GNN_time:=13.3404, Sum_Search_time:=6.1053, Avg_Gap_init:=17.2000, Avg_Gap_best:=15.9467, Avg_Cost_init:=1.8364, Avg_Cost_best:=1.8169, Avg_Otpimal_best:=1.5654, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 93%|█████████▎| 28/30 [01:09<00:04,  2.37s/it, Sum_GNN_time:=13.8115, Sum_Search_time:=6.3190, Avg_Gap_init:=17.2439, Avg_Gap_best:=16.0080, Avg_Cost_init:=1.8333, Avg_Cost_best:=1.8141, Avg_Otpimal_best:=1.5623, Avg_counts: =4.0000] 97%|█████████▋| 29/30 [01:09<00:02,  2.38s/it, Sum_GNN_time:=13.8115, Sum_Search_time:=6.3190, Avg_Gap_init:=17.2439, Avg_Gap_best:=16.0080, Avg_Cost_init:=1.8333, Avg_Cost_best:=1.8141, Avg_Otpimal_best:=1.5623, Avg_counts: =4.0000]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
 97%|█████████▋| 29/30 [01:11<00:02,  2.38s/it, Sum_GNN_time:=14.2857, Sum_Search_time:=6.5312, Avg_Gap_init:=17.1538, Avg_Gap_best:=15.9202, Avg_Cost_init:=1.8317, Avg_Cost_best:=1.8125, Avg_Otpimal_best:=1.5621, Avg_counts: =4.0000]100%|██████████| 30/30 [01:11<00:00,  2.40s/it, Sum_GNN_time:=14.2857, Sum_Search_time:=6.5312, Avg_Gap_init:=17.1538, Avg_Gap_best:=15.9202, Avg_Cost_init:=1.8317, Avg_Cost_best:=1.8125, Avg_Otpimal_best:=1.5621, Avg_counts: =4.0000]100%|██████████| 30/30 [01:11<00:00,  2.40s/it, Sum_GNN_time:=14.2857, Sum_Search_time:=6.5312, Avg_Gap_init:=17.1538, Avg_Gap_best:=15.9202, Avg_Cost_init:=1.8317, Avg_Cost_best:=1.8125, Avg_Otpimal_best:=1.5621, Avg_counts: =4.0000]
/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator MinMaxScaler from version 1.3.0 when using version 1.5.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
Total time for model prediction: 14.2857 seconds
Total time for guided local search: 6.5312 seconds
Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATSum', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp st', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
Namespace(atsp_size=500, data_path='../tsp_input/generated_insatnces_30_size_500', model_path='../atsp_model_train_result/Oct24_20-58-12_HetroGATSum_trained_ATSP50/trial_0', time_limit=0.16, perturbation_moves=5, device='cuda', half_st=False, relation_types='ss tt pp st')
model: HetroGATSum trained in ATSP500 for 100 and tested in ATSP500 for 30
device = cuda
  0%|          | 0/30 [00:00<?, ?it/s]/project/c_gnn_001/code/tsp/atsp_gnn/test.py:62: DeprecationWarning: numpy.core.numeric is deprecated and has been renamed to numpy._core.numeric. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core.numeric._frombuffer.
  G = pickle.load(f)
  0%|          | 0/30 [00:05<?, ?it/s]
Traceback (most recent call last):
  File "/project/c_gnn_001/code/tsp/atsp_gnn/test.py", line 158, in <module>
    main(args_test)
  File "/project/c_gnn_001/code/tsp/atsp_gnn/test.py", line 68, in main
    y_pred = model(H, x)
             ^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/code/tsp/atsp_gnn/gnngls/model.py", line 34, in forward
    h2 = gnn_layer(graph, h1)
         ^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/nn/pytorch/hetero.py", line 210, in forward
    dstdata = self._get_module((stype, etype, dtype))(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/nn/pytorch/conv/gatconv.py", line 340, in forward
    graph.edata["a"] = self.attn_drop(edge_softmax(graph, e))
                                      ^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/ops/edge_softmax.py", line 136, in edge_softmax
    return edge_softmax_internal(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/backend/pytorch/sparse.py", line 1116, in edge_softmax
    return EdgeSoftmax.apply(*args)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/torch/autograd/function.py", line 574, in apply
    return super().apply(*args, **kwargs)  # type: ignore[misc]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/backend/pytorch/sparse.py", line 711, in forward
    score = th.exp(_gsddmm(gidx, "sub", score, score_max, "e", "v"))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/_sparse_ops.py", line 552, in _gsddmm
    out = F.empty(out_shp, dtype, ctx)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/c_gnn_001/conda_envs/cuda121/lib/python3.11/site-packages/dgl/backend/pytorch/tensor.py", line 284, in empty
    return th.empty(shape, dtype=dtype, device=ctx)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 14.81 GiB. GPU 0 has a total capacity of 39.50 GiB of which 226.12 MiB is free. Including non-PyTorch memory, this process has 39.27 GiB memory in use. Of the allocated memory 21.95 GiB is allocated by PyTorch, and 16.83 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
