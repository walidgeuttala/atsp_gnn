Namespace(data_dir='../tsp_input/generated_insatnces_3000_size_50/', tb_dir='../atsp_model_train_result', atsp_size=50, to_homo=False, half_st=False, model='HetroGATConcat', input_dim=1, hidden_dim=128, output_dim=1, relation_types='ss tt pp', n_gnn_layers=4, n_heads=64, jk='cat', lr_init=0.001, lr_decay=0.95, min_delta=0.0001, patience=200, batch_size=15, n_epochs=100, checkpoint_freq=10, seed=4, n_trials=1, n_samples_result_train=30, device='cuda')
device = cuda
  0%|          | 0/100 [00:00<?, ?it/s]/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
/project/p_gnn001/code/tsp/tsp_gnn/gnngls/datasets.py:232: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  H.ndata['in_solution'] = torch.tensor(in_solution, dtype=torch.float32).reshape(-1, 1)
  0%|          | 0/100 [00:28<?, ?it/s]
Traceback (most recent call last):
  File "/project/p_gnn001/code/tsp/tsp_gnn/train.py", line 171, in <module>
    best_val_result, best_avg_gap_result, run_name = train(args, trial_id, run_name)
                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/p_gnn001/code/tsp/tsp_gnn/train.py", line 120, in train
    result2 = atsp_results(model, args, val_set)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/p_gnn001/code/tsp/tsp_gnn/utils.py", line 37, in atsp_results
    es = H.ndata['e'].cpu().numpy()
         ~~~~~~~^^^^^
  File "/home/p_gnngw/miniconda3/envs/cuda118/lib/python3.12/site-packages/dgl/view.py", line 80, in __getitem__
    return self._graph._get_n_repr(self._ntid, self._nodes)[key]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "/home/p_gnngw/miniconda3/envs/cuda118/lib/python3.12/site-packages/dgl/frame.py", line 688, in __getitem__
    return self._columns[name].data
           ~~~~~~~~~~~~~^^^^^^
KeyError: 'e'
